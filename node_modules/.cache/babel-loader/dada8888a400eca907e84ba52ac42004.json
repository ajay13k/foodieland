{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { cx, runIfFn, __DEV__ } from \"@chakra-ui/utils\";\nimport { motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { MenuDescendantsProvider, MenuProvider, useMenu, useMenuButton, useMenuContext, useMenuItem, useMenuList, useMenuOption, useMenuOptionGroup, useMenuPositioner } from \"./use-menu\";\n/**\n * Menu provides context, state, and focus management\n * to its sub-components. It doesn't render any DOM node.\n */\n\nexport var Menu = function Menu(props) {\n  var children = props.children;\n  var styles = useMultiStyleConfig(\"Menu\", props);\n  var ownProps = omitThemingProps(props);\n\n  var _useMenu = useMenu(ownProps),\n      descendants = _useMenu.descendants,\n      ctx = _objectWithoutPropertiesLoose(_useMenu, [\"descendants\"]);\n\n  var context = React.useMemo(function () {\n    return ctx;\n  }, [ctx]);\n  var isOpen = context.isOpen,\n      onClose = context.onClose,\n      forceUpdate = context.forceUpdate;\n  return /*#__PURE__*/React.createElement(MenuDescendantsProvider, {\n    value: descendants\n  }, /*#__PURE__*/React.createElement(MenuProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, runIfFn(children, {\n    isOpen: isOpen,\n    onClose: onClose,\n    forceUpdate: forceUpdate\n  }))));\n};\n\nif (__DEV__) {\n  Menu.displayName = \"Menu\";\n}\n\nvar StyledMenuButton = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({\n    ref: ref\n  }, props, {\n    __css: _extends({\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      outline: 0,\n      transition: \"all 250ms\"\n    }, styles.button)\n  }));\n});\n/**\n * The trigger for the menu list. Must be a direct child of `Menu`.\n */\n\nexport var MenuButton = /*#__PURE__*/forwardRef(function (props, ref) {\n  var As = props.as,\n      rest = _objectWithoutPropertiesLoose(props, [\"children\", \"as\"]);\n\n  var buttonProps = useMenuButton(rest, ref);\n  var Element = As || StyledMenuButton;\n  return /*#__PURE__*/React.createElement(Element, _extends({}, buttonProps, {\n    className: cx(\"chakra-menu__menu-button\", props.className)\n  }), /*#__PURE__*/React.createElement(chakra.span, {\n    __css: {\n      pointerEvents: \"none\",\n      flex: \"1 1 auto\",\n      minW: 0\n    }\n  }, props.children));\n});\n\nif (__DEV__) {\n  MenuButton.displayName = \"MenuButton\";\n}\n\nvar motionVariants = {\n  enter: {\n    visibility: \"visible\",\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 0.2, 1]\n    }\n  },\n  exit: {\n    transitionEnd: {\n      visibility: \"hidden\"\n    },\n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.1,\n      easings: \"easeOut\"\n    }\n  }\n}; // @future: only call `motion(chakra.div)` when we drop framer-motion v3 support\n\nvar MotionDiv = \"custom\" in motion ? motion.custom(chakra.div) : motion(chakra.div);\nexport var MenuList = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$zIndex, _styles$list;\n\n  var rootProps = props.rootProps,\n      rest = _objectWithoutPropertiesLoose(props, [\"rootProps\"]);\n\n  var _useMenuContext = useMenuContext(),\n      isOpen = _useMenuContext.isOpen,\n      onTransitionEnd = _useMenuContext.onTransitionEnd;\n\n  var menulistProps = useMenuList(rest, ref);\n  var positionerProps = useMenuPositioner(rootProps);\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, positionerProps, {\n    __css: {\n      zIndex: (_props$zIndex = props.zIndex) != null ? _props$zIndex : (_styles$list = styles.list) == null ? void 0 : _styles$list.zIndex\n    }\n  }), /*#__PURE__*/React.createElement(MotionDiv, _extends({}, menulistProps, {\n    /**\n     * We could call this on either `onAnimationComplete` or `onUpdate`.\n     * It seems the re-focusing works better with the `onUpdate`\n     */\n    onUpdate: onTransitionEnd,\n    className: cx(\"chakra-menu__menu-list\", menulistProps.className),\n    variants: motionVariants,\n    initial: false,\n    animate: isOpen ? \"enter\" : \"exit\",\n    __css: _extends({\n      outline: 0\n    }, styles.list)\n  })));\n});\n\nif (__DEV__) {\n  MenuList.displayName = \"MenuList\";\n}\n\nvar StyledMenuItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var type = props.type,\n      rest = _objectWithoutPropertiesLoose(props, [\"type\"]);\n\n  var styles = useStyles();\n  /**\n   * Given another component, use its type if present\n   * Else, use no type to avoid invalid html, e.g. <a type=\"button\" />\n   * Else, fall back to \"button\"\n   */\n\n  var btnType = rest.as ? type != null ? type : undefined : \"button\";\n\n  var buttonStyles = _extends({\n    textDecoration: \"none\",\n    color: \"inherit\",\n    userSelect: \"none\",\n    display: \"flex\",\n    width: \"100%\",\n    alignItems: \"center\",\n    textAlign: \"start\",\n    flex: \"0 0 auto\",\n    outline: 0\n  }, styles.item);\n\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({\n    ref: ref,\n    type: btnType\n  }, rest, {\n    __css: buttonStyles\n  }));\n});\nexport var MenuItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var icon = props.icon,\n      _props$iconSpacing = props.iconSpacing,\n      iconSpacing = _props$iconSpacing === void 0 ? \"0.75rem\" : _props$iconSpacing,\n      command = props.command,\n      _props$commandSpacing = props.commandSpacing,\n      commandSpacing = _props$commandSpacing === void 0 ? \"0.75rem\" : _props$commandSpacing,\n      children = props.children,\n      rest = _objectWithoutPropertiesLoose(props, [\"icon\", \"iconSpacing\", \"command\", \"commandSpacing\", \"children\"]);\n\n  var menuitemProps = useMenuItem(rest, ref);\n  var shouldWrap = icon || command;\n\n  var _children = shouldWrap ? /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      pointerEvents: \"none\",\n      flex: 1\n    }\n  }, children) : children;\n\n  return /*#__PURE__*/React.createElement(StyledMenuItem, _extends({}, menuitemProps, {\n    className: cx(\"chakra-menu__menuitem\", menuitemProps.className)\n  }), icon && /*#__PURE__*/React.createElement(MenuIcon, {\n    fontSize: \"0.8em\",\n    marginEnd: iconSpacing\n  }, icon), _children, command && /*#__PURE__*/React.createElement(MenuCommand, {\n    marginStart: commandSpacing\n  }, command));\n});\n\nif (__DEV__) {\n  MenuItem.displayName = \"MenuItem\";\n}\n\nvar CheckIcon = function CheckIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 14 14\",\n    width: \"1em\",\n    height: \"1em\"\n  }, props), /*#__PURE__*/React.createElement(\"polygon\", {\n    fill: \"currentColor\",\n    points: \"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n  }));\n};\n\nexport var MenuItemOption = /*#__PURE__*/forwardRef(function (props, ref) {\n  var icon = props.icon,\n      _props$iconSpacing2 = props.iconSpacing,\n      iconSpacing = _props$iconSpacing2 === void 0 ? \"0.75rem\" : _props$iconSpacing2,\n      rest = _objectWithoutPropertiesLoose(props, [\"icon\", \"iconSpacing\"]);\n\n  var optionProps = useMenuOption(rest, ref);\n  return /*#__PURE__*/React.createElement(StyledMenuItem, _extends({}, optionProps, {\n    className: cx(\"chakra-menu__menuitem-option\", rest.className)\n  }), /*#__PURE__*/React.createElement(MenuIcon, {\n    fontSize: \"0.8em\",\n    marginEnd: iconSpacing,\n    opacity: props.isChecked ? 1 : 0\n  }, icon || /*#__PURE__*/React.createElement(CheckIcon, null)), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      flex: 1\n    }\n  }, optionProps.children));\n});\nMenuItemOption.id = \"MenuItemOption\";\n\nif (__DEV__) {\n  MenuItemOption.displayName = \"MenuItemOption\";\n}\n\nexport var MenuOptionGroup = function MenuOptionGroup(props) {\n  var className = props.className,\n      title = props.title,\n      rest = _objectWithoutPropertiesLoose(props, [\"className\", \"title\"]);\n\n  var ownProps = useMenuOptionGroup(rest);\n  return /*#__PURE__*/React.createElement(MenuGroup, _extends({\n    title: title,\n    className: cx(\"chakra-menu__option-group\", className)\n  }, ownProps));\n};\n\nif (__DEV__) {\n  MenuOptionGroup.displayName = \"MenuOptionGroup\";\n}\n\nexport var MenuGroup = /*#__PURE__*/forwardRef(function (props, ref) {\n  var title = props.title,\n      children = props.children,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, [\"title\", \"children\", \"className\"]);\n\n  var _className = cx(\"chakra-menu__group__title\", className);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: \"chakra-menu__group\",\n    role: \"group\"\n  }, title && /*#__PURE__*/React.createElement(chakra.p, _extends({\n    className: _className\n  }, rest, {\n    __css: styles.groupTitle\n  }), title), children);\n});\n\nif (__DEV__) {\n  MenuGroup.displayName = \"MenuGroup\";\n}\n\nexport var MenuCommand = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref\n  }, props, {\n    __css: styles.command,\n    className: \"chakra-menu__command\"\n  }));\n});\n\nif (__DEV__) {\n  MenuCommand.displayName = \"MenuCommand\";\n}\n\nexport var MenuIcon = function MenuIcon(props) {\n  var className = props.className,\n      children = props.children,\n      rest = _objectWithoutPropertiesLoose(props, [\"className\", \"children\"]);\n\n  var child = React.Children.only(children);\n  var clone = /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, {\n    focusable: \"false\",\n    \"aria-hidden\": true,\n    className: cx(\"chakra-menu__icon\", child.props.className)\n  }) : null;\n\n  var _className = cx(\"chakra-menu__icon-wrapper\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    className: _className\n  }, rest, {\n    __css: {\n      flexShrink: 0\n    }\n  }), clone);\n};\n\nif (__DEV__) {\n  MenuIcon.displayName = \"MenuIcon\";\n}\n\nexport var MenuDivider = function MenuDivider(props) {\n  var className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, [\"className\"]);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.hr, _extends({\n    role: \"separator\",\n    \"aria-orientation\": \"horizontal\",\n    className: cx(\"chakra-menu__divider\", className)\n  }, rest, {\n    __css: styles.divider\n  }));\n};\n\nif (__DEV__) {\n  MenuDivider.displayName = \"MenuDivider\";\n}","map":{"version":3,"mappings":"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","names":["chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","cx","runIfFn","__DEV__","motion","React","MenuDescendantsProvider","MenuProvider","useMenu","useMenuButton","useMenuContext","useMenuItem","useMenuList","useMenuOption","useMenuOptionGroup","useMenuPositioner","Menu","props","children","styles","ownProps","descendants","ctx","context","useMemo","isOpen","onClose","forceUpdate","value","displayName","StyledMenuButton","ref","button","__css","display","appearance","alignItems","outline","transition","MenuButton","As","as","rest","_objectWithoutPropertiesLoose","buttonProps","Element","className","span","pointerEvents","flex","minW","motionVariants","enter","visibility","opacity","scale","duration","ease","exit","transitionEnd","easings","MotionDiv","custom","div","MenuList","rootProps","onTransitionEnd","menulistProps","positionerProps","zIndex","list","_styles$list","onUpdate","variants","initial","animate","StyledMenuItem","type","btnType","undefined","buttonStyles","textDecoration","color","userSelect","width","textAlign","item","MenuItem","icon","iconSpacing","command","commandSpacing","menuitemProps","shouldWrap","_children","style","MenuIcon","fontSize","marginEnd","MenuCommand","marginStart","CheckIcon","viewBox","height","fill","points","MenuItemOption","optionProps","isChecked","id","MenuOptionGroup","title","MenuGroup","_className","role","p","groupTitle","child","Children","only","clone","isValidElement","cloneElement","focusable","flexShrink","MenuDivider","hr","divider"],"sources":["../../src/menu.tsx"],"sourcesContent":["import { MaybeRenderProp } from \"@chakra-ui/react-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  PropsOf,\n  StylesProvider,\n  SystemProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n} from \"@chakra-ui/system\"\nimport { cx, runIfFn, __DEV__ } from \"@chakra-ui/utils\"\nimport { CustomDomComponent, motion, Variants } from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  MenuDescendantsProvider,\n  MenuProvider,\n  useMenu,\n  useMenuButton,\n  useMenuContext,\n  useMenuItem,\n  UseMenuItemProps,\n  useMenuList,\n  useMenuOption,\n  useMenuOptionGroup,\n  UseMenuOptionGroupProps,\n  UseMenuOptionOptions,\n  useMenuPositioner,\n  UseMenuProps,\n} from \"./use-menu\"\n\nexport interface MenuProps extends UseMenuProps, ThemingProps<\"Menu\"> {\n  children: MaybeRenderProp<{\n    isOpen: boolean\n    onClose: () => void\n    forceUpdate: (() => void) | undefined\n  }>\n}\n\n/**\n * Menu provides context, state, and focus management\n * to its sub-components. It doesn't render any DOM node.\n */\nexport const Menu: React.FC<MenuProps> = (props) => {\n  const { children } = props\n\n  const styles = useMultiStyleConfig(\"Menu\", props)\n  const ownProps = omitThemingProps(props)\n\n  const { descendants, ...ctx } = useMenu(ownProps)\n  const context = React.useMemo(() => ctx, [ctx])\n\n  const { isOpen, onClose, forceUpdate } = context\n\n  return (\n    <MenuDescendantsProvider value={descendants}>\n      <MenuProvider value={context}>\n        <StylesProvider value={styles}>\n          {runIfFn(children, { isOpen, onClose, forceUpdate })}\n        </StylesProvider>\n      </MenuProvider>\n    </MenuDescendantsProvider>\n  )\n}\n\nif (__DEV__) {\n  Menu.displayName = \"Menu\"\n}\n\nexport interface MenuButtonProps extends HTMLChakraProps<\"button\"> {}\n\nconst StyledMenuButton = forwardRef<MenuButtonProps, \"button\">((props, ref) => {\n  const styles = useStyles()\n  return (\n    <chakra.button\n      ref={ref}\n      {...props}\n      __css={{\n        display: \"inline-flex\",\n        appearance: \"none\",\n        alignItems: \"center\",\n        outline: 0,\n        transition: \"all 250ms\",\n        ...styles.button,\n      }}\n    />\n  )\n})\n\n/**\n * The trigger for the menu list. Must be a direct child of `Menu`.\n */\nexport const MenuButton = forwardRef<MenuButtonProps, \"button\">(\n  (props, ref) => {\n    const { children, as: As, ...rest } = props\n\n    const buttonProps = useMenuButton(rest, ref)\n\n    const Element = As || StyledMenuButton\n\n    return (\n      <Element\n        {...buttonProps}\n        className={cx(\"chakra-menu__menu-button\", props.className)}\n      >\n        <chakra.span\n          __css={{ pointerEvents: \"none\", flex: \"1 1 auto\", minW: 0 }}\n        >\n          {props.children}\n        </chakra.span>\n      </Element>\n    )\n  },\n)\n\nif (__DEV__) {\n  MenuButton.displayName = \"MenuButton\"\n}\n\nexport interface MenuListProps extends HTMLChakraProps<\"div\"> {\n  rootProps?: HTMLChakraProps<\"div\">\n}\n\nconst motionVariants: Variants = {\n  enter: {\n    visibility: \"visible\",\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    transitionEnd: {\n      visibility: \"hidden\",\n    },\n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.1,\n      easings: \"easeOut\",\n    },\n  },\n}\n\n// @future: only call `motion(chakra.div)` when we drop framer-motion v3 support\nconst MotionDiv: CustomDomComponent<PropsOf<typeof chakra.div>> =\n  \"custom\" in motion\n    ? (motion as any).custom(chakra.div)\n    : (motion as any)(chakra.div)\n\nexport const MenuList = forwardRef<MenuListProps, \"div\">((props, ref) => {\n  const { rootProps, ...rest } = props\n  const { isOpen, onTransitionEnd } = useMenuContext()\n\n  const menulistProps = useMenuList(rest, ref) as HTMLAttributes\n  const positionerProps = useMenuPositioner(rootProps)\n\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      {...positionerProps}\n      __css={{ zIndex: props.zIndex ?? styles.list?.zIndex }}\n    >\n      <MotionDiv\n        {...menulistProps}\n        /**\n         * We could call this on either `onAnimationComplete` or `onUpdate`.\n         * It seems the re-focusing works better with the `onUpdate`\n         */\n        onUpdate={onTransitionEnd}\n        className={cx(\"chakra-menu__menu-list\", menulistProps.className)}\n        variants={motionVariants}\n        initial={false}\n        animate={isOpen ? \"enter\" : \"exit\"}\n        __css={{\n          outline: 0,\n          ...styles.list,\n        }}\n      />\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  MenuList.displayName = \"MenuList\"\n}\n\nexport interface StyledMenuItemProps extends HTMLChakraProps<\"button\"> {}\n\nconst StyledMenuItem = forwardRef<StyledMenuItemProps, \"button\">(\n  (props, ref) => {\n    const { type, ...rest } = props\n    const styles = useStyles()\n\n    /**\n     * Given another component, use its type if present\n     * Else, use no type to avoid invalid html, e.g. <a type=\"button\" />\n     * Else, fall back to \"button\"\n     */\n    const btnType = rest.as ? type ?? undefined : \"button\"\n\n    const buttonStyles: SystemStyleObject = {\n      textDecoration: \"none\",\n      color: \"inherit\",\n      userSelect: \"none\",\n      display: \"flex\",\n      width: \"100%\",\n      alignItems: \"center\",\n      textAlign: \"start\",\n      flex: \"0 0 auto\",\n      outline: 0,\n      ...styles.item,\n    }\n\n    return (\n      <chakra.button ref={ref} type={btnType} {...rest} __css={buttonStyles} />\n    )\n  },\n)\n\ninterface MenuItemOptions\n  extends Pick<\n    UseMenuItemProps,\n    \"isDisabled\" | \"isFocusable\" | \"closeOnSelect\"\n  > {\n  /**\n   * The icon to render before the menu item's label.\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * The spacing between the icon and menu item's label.\n   * @type SystemProps[\"mr\"]\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n  /**\n   * Right-aligned label text content, useful for displaying hotkeys.\n   */\n  command?: string\n  /**\n   * The spacing between the command and menu item's label.\n   * @type SystemProps[\"ml\"]\n   */\n  commandSpacing?: SystemProps[\"ml\"]\n}\n\ntype HTMLAttributes = React.HTMLAttributes<HTMLElement>\n\nexport interface MenuItemProps\n  extends HTMLChakraProps<\"button\">,\n    MenuItemOptions {}\n\nexport const MenuItem = forwardRef<MenuItemProps, \"button\">((props, ref) => {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    command,\n    commandSpacing = \"0.75rem\",\n    children,\n    ...rest\n  } = props\n\n  const menuitemProps = useMenuItem(rest, ref) as HTMLAttributes\n\n  const shouldWrap = icon || command\n\n  const _children = shouldWrap ? (\n    <span style={{ pointerEvents: \"none\", flex: 1 }}>{children}</span>\n  ) : (\n    children\n  )\n\n  return (\n    <StyledMenuItem\n      {...menuitemProps}\n      className={cx(\"chakra-menu__menuitem\", menuitemProps.className)}\n    >\n      {icon && (\n        <MenuIcon fontSize=\"0.8em\" marginEnd={iconSpacing}>\n          {icon}\n        </MenuIcon>\n      )}\n      {_children}\n      {command && (\n        <MenuCommand marginStart={commandSpacing}>{command}</MenuCommand>\n      )}\n    </StyledMenuItem>\n  )\n})\n\nif (__DEV__) {\n  MenuItem.displayName = \"MenuItem\"\n}\n\nconst CheckIcon: React.FC<PropsOf<\"svg\">> = (props) => (\n  <svg viewBox=\"0 0 14 14\" width=\"1em\" height=\"1em\" {...props}>\n    <polygon\n      fill=\"currentColor\"\n      points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    />\n  </svg>\n)\n\nexport interface MenuItemOptionProps\n  extends UseMenuOptionOptions,\n    Omit<MenuItemProps, keyof UseMenuOptionOptions> {\n  /**\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * @type SystemProps[\"mr\"]\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n}\n\nexport const MenuItemOption = forwardRef<MenuItemOptionProps, \"button\">(\n  (props, ref) => {\n    const { icon, iconSpacing = \"0.75rem\", ...rest } = props\n\n    const optionProps = useMenuOption(rest, ref) as HTMLAttributes\n\n    return (\n      <StyledMenuItem\n        {...optionProps}\n        className={cx(\"chakra-menu__menuitem-option\", rest.className)}\n      >\n        <MenuIcon\n          fontSize=\"0.8em\"\n          marginEnd={iconSpacing}\n          opacity={props.isChecked ? 1 : 0}\n        >\n          {icon || <CheckIcon />}\n        </MenuIcon>\n        <span style={{ flex: 1 }}>{optionProps.children}</span>\n      </StyledMenuItem>\n    )\n  },\n)\n\nMenuItemOption.id = \"MenuItemOption\"\n\nif (__DEV__) {\n  MenuItemOption.displayName = \"MenuItemOption\"\n}\n\nexport interface MenuOptionGroupProps\n  extends UseMenuOptionGroupProps,\n    Omit<MenuGroupProps, \"value\" | \"defaultValue\" | \"onChange\"> {}\n\nexport const MenuOptionGroup: React.FC<MenuOptionGroupProps> = (props) => {\n  const { className, title, ...rest } = props\n  const ownProps = useMenuOptionGroup(rest)\n  return (\n    <MenuGroup\n      title={title}\n      className={cx(\"chakra-menu__option-group\", className)}\n      {...ownProps}\n    />\n  )\n}\n\nif (__DEV__) {\n  MenuOptionGroup.displayName = \"MenuOptionGroup\"\n}\n\nexport interface MenuGroupProps extends HTMLChakraProps<\"div\"> {}\n\nexport const MenuGroup = forwardRef<MenuGroupProps, \"div\">((props, ref) => {\n  const { title, children, className, ...rest } = props\n\n  const _className = cx(\"chakra-menu__group__title\", className)\n  const styles = useStyles()\n\n  return (\n    <div ref={ref} className=\"chakra-menu__group\" role=\"group\">\n      {title && (\n        <chakra.p className={_className} {...rest} __css={styles.groupTitle}>\n          {title}\n        </chakra.p>\n      )}\n      {children}\n    </div>\n  )\n})\n\nif (__DEV__) {\n  MenuGroup.displayName = \"MenuGroup\"\n}\n\nexport interface MenuCommandProps extends HTMLChakraProps<\"span\"> {}\n\nexport const MenuCommand = forwardRef<MenuCommandProps, \"span\">(\n  (props, ref) => {\n    const styles = useStyles()\n    return (\n      <chakra.span\n        ref={ref}\n        {...props}\n        __css={styles.command}\n        className=\"chakra-menu__command\"\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  MenuCommand.displayName = \"MenuCommand\"\n}\n\nexport const MenuIcon: React.FC<HTMLChakraProps<\"span\">> = (props) => {\n  const { className, children, ...rest } = props\n\n  const child = React.Children.only(children)\n\n  const clone = React.isValidElement(child)\n    ? React.cloneElement(child, {\n        focusable: \"false\",\n        \"aria-hidden\": true,\n        className: cx(\"chakra-menu__icon\", child.props.className),\n      })\n    : null\n\n  const _className = cx(\"chakra-menu__icon-wrapper\", className)\n\n  return (\n    <chakra.span\n      className={_className}\n      {...rest}\n      __css={{\n        flexShrink: 0,\n      }}\n    >\n      {clone}\n    </chakra.span>\n  )\n}\n\nif (__DEV__) {\n  MenuIcon.displayName = \"MenuIcon\"\n}\n\nexport interface MenuDividerProps extends HTMLChakraProps<\"hr\"> {}\n\nexport const MenuDivider: React.FC<MenuDividerProps> = (props) => {\n  const { className, ...rest } = props\n  const styles = useStyles()\n  return (\n    <chakra.hr\n      role=\"separator\"\n      aria-orientation=\"horizontal\"\n      className={cx(\"chakra-menu__divider\", className)}\n      {...rest}\n      __css={styles.divider}\n    />\n  )\n}\n\nif (__DEV__) {\n  MenuDivider.displayName = \"MenuDivider\"\n}\n"]},"metadata":{},"sourceType":"module"}