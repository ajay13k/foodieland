{"ast":null,"code":"import _regeneratorRuntime from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/ajay/Documents/foodieland/src/pages/Recipe/recipeDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport { Heading, Text, Box, Grid, GridItem, Image, Avatar, Flex, HStack, Icon, VStack, Button, SimpleGrid, Spacer } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { FiPrinter, FiShare2 } from \"react-icons/fi\";\nimport { RiTimerFill } from \"react-icons/ri\";\nimport { TbToolsKitchen2 } from \"react-icons/tb\";\nimport RecipeDirection from \"./recipeDirection\";\nimport RecipeIngrediant from \"./RecipeIngredient\";\nimport Static2 from \"../Home/static2\";\nimport Footer from \"../Home/footer\";\nimport ContactRecipe from \"../Contact/contactRecipe\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RecipeDetails(props) {\n  _s();\n\n  var receipeId = props.match.params.receipeId;\n  console.log(\"id\", receipeId);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      recipe = _useState2[0],\n      setRecipe = _useState2[1];\n\n  var api = \"https://foodielandnod.herokuapp.com/api/recipeDetails?id=\";\n  useEffect(function () {\n    var loadPost = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(api + receipeId);\n\n              case 2:\n                response = _context.sent;\n                setRecipe(response.data);\n                console.log(response);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function loadPost() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    loadPost();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      maxW: 1088,\n      mx: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          children: recipe && reciperecipe.receipeId.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RecipeIngrediant, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RecipeDirection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Static2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ContactRecipe, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RecipeDetails, \"NiGEro/KvkAMuYeTrdy4dlbXQM0=\");\n\n_c = RecipeDetails;\nexport default RecipeDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeDetails\");","map":{"version":3,"names":["Heading","Text","Box","Grid","GridItem","Image","Avatar","Flex","HStack","Icon","VStack","Button","SimpleGrid","Spacer","axios","useState","useEffect","React","FiPrinter","FiShare2","RiTimerFill","TbToolsKitchen2","RecipeDirection","RecipeIngrediant","Static2","Footer","ContactRecipe","RecipeDetails","props","receipeId","match","params","console","log","recipe","setRecipe","api","loadPost","get","response","data","reciperecipe","title"],"sources":["/home/ajay/Documents/foodieland/src/pages/Recipe/recipeDetails.jsx"],"sourcesContent":["import {\n    Heading,\n    Text,\n    Box,\n    Grid,\n    GridItem,\n    Image,\n    Avatar,\n    Flex,\n    HStack,\n    Icon,\n    VStack,\n    Button,\n    SimpleGrid,\n    Spacer,\n  } from \"@chakra-ui/react\";\n  import axios from \"axios\";\n  import { useState, useEffect } from \"react\";\n  import React from \"react\";\n  import { FiPrinter, FiShare2 } from \"react-icons/fi\";\n  import { RiTimerFill } from \"react-icons/ri\";\n  import { TbToolsKitchen2 } from \"react-icons/tb\";\n  import RecipeDirection from \"./recipeDirection\";\n  import RecipeIngrediant from \"./RecipeIngredient\";\n  import Static2 from \"../Home/static2\";\n  import Footer from \"../Home/footer\";\n  import ContactRecipe from \"../Contact/contactRecipe\";\n\n  function RecipeDetails(props) {\n    const receipeId = props.match.params.receipeId;\n    console.log(\"id\",receipeId)\n    const [recipe, setRecipe] = useState([]);\n\n    const api = \"https://foodielandnod.herokuapp.com/api/recipeDetails?id=\";  \n    useEffect(() => {\n      const loadPost = async () => {\n        const response = await axios.get(api+receipeId);\n        setRecipe(response.data);\n        console.log(response)\n      };\n  \n      loadPost();\n    }, []);\n    return (\n      <>\n        <Box mt={20} maxW={1088} mx={\"auto\"}>\n            <>\n              <Heading>{recipe && reciperecipe.receipeId.title}</Heading>\n              {/* <Flex mt={5}>\n                <Box w={700}>\n                  <Grid templateColumns=\"repeat(4, 1fr)\" gap={4}>\n                    <GridItem>\n                      <HStack>\n                        <Avatar\n                          name=\"Ryan Florence\"\n                          src=\"https://bit.ly/ryan-florence\"\n                        />\n                        <Text\n                          fontSize={13}\n                          fontWeight={\"semibold\"}\n                          textAlign={\"center\"}\n                        >\n                          {item.recipeId.userId.firstName} <br />\n                          {item.recipeId.updatedAt}\n                        </Text>\n                      </HStack>\n                    </GridItem>\n                    <GridItem>\n                      <HStack ml={5} mt={1}>\n                        <Icon as={RiTimerFill} />\n                        <Text fontSize={13} fontWeight={\"semibold\"}>\n                          Prep Time\n                          <br />\n                          {item.recipeId.prepTime}\n                        </Text>\n                      </HStack>\n                    </GridItem>\n                    <GridItem>\n                      <HStack ml={1} mt={1}>\n                        <Icon as={RiTimerFill} />\n                        <Text fontSize={13} fontWeight={\"semibold\"}>\n                          Cook Time\n                          <br />\n                          {item.recipeId.cookTime}\n                        </Text>\n                      </HStack>\n                    </GridItem>\n                    <GridItem>\n                      <HStack mt={1}>\n                        <Icon as={TbToolsKitchen2} />\n                        <Text fontSize={13} fontWeight={\"semibold\"}>\n                        {item.recipeId.categoryId.categoryName}\n                        </Text>\n                      </HStack>\n                    </GridItem>\n                  </Grid>\n                  <Box mt={5}>\n                    <Image\n                      w={650}\n                      h={460}\n                      src={\n                        \"https://foodielandnod.herokuapp.com/\" +\n                        item.recipeId.image\n                      }\n                    />\n                  </Box>\n                </Box>\n                <Box>\n                  <VStack>\n                    <Flex>\n                      <Button>\n                        <Icon as={FiPrinter} />\n                        Print\n                      </Button>\n                      <Button ml={2}>\n                        <Icon as={FiShare2} />\n                        Share\n                      </Button>\n                    </Flex>\n                    <Flex>\n                      <Box\n                        mt={7}\n                        w={324}\n                        borderLeftRadius={5}\n                        borderRightRadius={5}\n                        ml={5}\n                        bg=\"#e6ffff\"\n                      >\n                        <VStack mt={2}>\n                          <Heading size={\"md\"}>Nutrition Information</Heading>\n                          <Grid templateRow=\"repeat(5, 1fr)\" gap={6}>\n                            <GridItem mt={4}>\n                              <HStack\n                                w=\"275px\"\n                                h=\"10\"\n                                justifyContent={\"space-between\"}\n                              >\n                                <Text>Calories</Text> <Text>219.9 kcal</Text>\n                              </HStack>\n                            </GridItem>\n                            <GridItem>\n                              <HStack\n                                w=\"275px\"\n                                h=\"10\"\n                                justifyContent={\"space-between\"}\n                              >\n                                <Text>Total Fat</Text>\n                                <Text>10.7 g</Text>\n                              </HStack>\n                            </GridItem>\n                            <GridItem>\n                              <HStack\n                                w=\"275px\"\n                                h=\"10\"\n                                justifyContent={\"space-between\"}\n                              >\n                                <Text>Protein</Text>\n                                <Text>7.9 g</Text>\n                              </HStack>\n                            </GridItem>\n                            <GridItem>\n                              <HStack\n                                w=\"275px\"\n                                h=\"10\"\n                                justifyContent={\"space-between\"}\n                              >\n                                <Text>Carbohydrate</Text>\n                                <Text>22.5 g</Text>\n                              </HStack>\n                            </GridItem>\n                            <GridItem>\n                              <HStack\n                                w=\"275px\"\n                                h=\"10\"\n                                justifyContent={\"space-between\"}\n                              >\n                                <Text>Cholestral</Text>\n                                <Text>37.4 g</Text>\n                              </HStack>\n                            </GridItem>\n                          </Grid>\n                          <Box>\n                            <Text mt={8} textAlign={\"center\"}>\n                            {item.recipeId.description}\n                            </Text>\n                          </Box>\n                        </VStack>\n                      </Box>\n                    </Flex>\n                  </VStack>\n                </Box>\n              </Flex>\n              <Flex mt={20}>\n                <Text>\n                {item.recipeId.description}\n                </Text>\n              </Flex> */}\n            </>\n        </Box>\n        <RecipeIngrediant />\n        <RecipeDirection />\n        <Static2 />\n        <ContactRecipe />\n        <Footer />\n      </>\n    );\n  }\n  \n  export default RecipeDetails;\n  "],"mappings":";;;;;;;AAAA,SACIA,OADJ,EAEIC,IAFJ,EAGIC,GAHJ,EAIIC,IAJJ,EAKIC,QALJ,EAMIC,KANJ,EAOIC,MAPJ,EAQIC,IARJ,EASIC,MATJ,EAUIC,IAVJ,EAWIC,MAXJ,EAYIC,MAZJ,EAaIC,UAbJ,EAcIC,MAdJ,QAeS,kBAfT;AAgBE,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,gBAApC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAAA;;EAC5B,IAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,SAArC;EACAG,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBJ,SAAjB;;EACA,gBAA4Bd,QAAQ,CAAC,EAAD,CAApC;EAAA;EAAA,IAAOmB,MAAP;EAAA,IAAeC,SAAf;;EAEA,IAAMC,GAAG,GAAG,2DAAZ;EACApB,SAAS,CAAC,YAAM;IACd,IAAMqB,QAAQ;MAAA,sEAAG;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQvB,KAAK,CAACwB,GAAN,CAAUF,GAAG,GAACP,SAAd,CADR;;cAAA;gBACTU,QADS;gBAEfJ,SAAS,CAACI,QAAQ,CAACC,IAAV,CAAT;gBACAR,OAAO,CAACC,GAAR,CAAYM,QAAZ;;cAHe;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAH;;MAAA,gBAARF,QAAQ;QAAA;MAAA;IAAA,GAAd;;IAMAA,QAAQ;EACT,CARQ,EAQN,EARM,CAAT;EASA,oBACE;IAAA,wBACE,QAAC,GAAD;MAAK,EAAE,EAAE,EAAT;MAAa,IAAI,EAAE,IAAnB;MAAyB,EAAE,EAAE,MAA7B;MAAA,uBACI;QAAA,uBACE,QAAC,OAAD;UAAA,UAAUH,MAAM,IAAIO,YAAY,CAACZ,SAAb,CAAuBa;QAA3C;UAAA;UAAA;UAAA;QAAA;MADF;IADJ;MAAA;MAAA;MAAA;IAAA,QADF,eA2JE,QAAC,gBAAD;MAAA;MAAA;MAAA;IAAA,QA3JF,eA4JE,QAAC,eAAD;MAAA;MAAA;MAAA;IAAA,QA5JF,eA6JE,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QA7JF,eA8JE,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QA9JF,eA+JE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QA/JF;EAAA,gBADF;AAmKD;;GAlLQf,a;;KAAAA,a;AAoLT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}