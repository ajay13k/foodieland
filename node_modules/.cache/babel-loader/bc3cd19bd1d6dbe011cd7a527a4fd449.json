{"ast":null,"code":"import * as React from \"react\";\nimport { useSafeLayoutEffect } from \"./use-safe-layout-effect\";\n/**\n * React hook to persist any value between renders,\n * but keeps it up-to-date if it changes.\n *\n * @param value the value or function to persist\n */\n\nexport function useCallbackRef(fn, deps) {\n  if (deps === void 0) {\n    deps = [];\n  }\n\n  var ref = React.useRef(fn);\n  useSafeLayoutEffect(function () {\n    ref.current = fn;\n  }); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  return React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return ref.current == null ? void 0 : ref.current.apply(ref, args);\n  }, deps);\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,CACLC,EADK,EAELC,IAFK,EAGF;EAAA,IADHA,IACG;IADHA,IACG,GAD0B,EAA7BA;EACG;;EACH,IAAMC,GAAG,GAAGL,KAAK,CAACM,MAANN,CAAaG,EAAbH,CAAZ;EAEAC,mBAAmB,CAAC,YAAM;IACxBI,GAAG,CAACE,OAAJF,GAAcF,EAAdE;EADiB,EAAnBJ,CAHG,CAOH;;EACA,OAAOD,KAAK,CAACQ,WAANR,CAAmB;IAAA,kCAAIS,IAAJ;MAAIA,IAAJ,MAAIA,GAAJC,eAAID;IAAJ;;IAAA,OAAaJ,GAAG,CAACE,OAAJF,IAAb,IAAaA,GAAb,MAAaA,MAAG,CAACE,OAAJF,UAAG,EAAcI,IAAd,CAAhB;EAAnB,GAA8DL,IAA9DJ,CAAP;AACD","names":["React","useSafeLayoutEffect","useCallbackRef","fn","deps","ref","useRef","current","useCallback","args","arguments"],"sources":["../../src/use-callback-ref.ts"],"sourcesContent":["import * as React from \"react\"\nimport { useSafeLayoutEffect } from \"./use-safe-layout-effect\"\n\n/**\n * React hook to persist any value between renders,\n * but keeps it up-to-date if it changes.\n *\n * @param value the value or function to persist\n */\nexport function useCallbackRef<T extends (...args: any[]) => any>(\n  fn: T | undefined,\n  deps: React.DependencyList = [],\n): T {\n  const ref = React.useRef(fn)\n\n  useSafeLayoutEffect(() => {\n    ref.current = fn\n  })\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(((...args) => ref.current?.(...args)) as T, deps)\n}\n"]},"metadata":{},"sourceType":"module"}