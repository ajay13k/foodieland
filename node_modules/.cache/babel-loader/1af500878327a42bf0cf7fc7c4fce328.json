{"ast":null,"code":"import _defineProperty from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { getBoxShadow, toTransformOrigin, cssVars } from \"./utils\";\n/* -------------------------------------------------------------------------------------------------\n The match width modifier sets the popper width to match the reference.\n It us useful for custom selects, autocomplete, etc.\n* -----------------------------------------------------------------------------------------------*/\n\nexport var matchWidth = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: function fn(_ref) {\n    var state = _ref.state;\n    state.styles.popper.width = state.rects.reference.width + \"px\";\n  },\n  effect: function effect(_ref2) {\n    var state = _ref2.state;\n    return function () {\n      var reference = state.elements.reference;\n      state.elements.popper.style.width = reference.offsetWidth + \"px\";\n    };\n  }\n};\n/* -------------------------------------------------------------------------------------------------\n  The transform origin modifier sets the css `transformOrigin` value of the popper\n  based on the dynamic placement state of the popper.\n  \n  Useful when we need to animate/transition the popper.\n* -----------------------------------------------------------------------------------------------*/\n\nexport var transformOrigin = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: function fn(_ref3) {\n    var state = _ref3.state;\n    setTransformOrigin(state);\n  },\n  effect: function effect(_ref4) {\n    var state = _ref4.state;\n    return function () {\n      setTransformOrigin(state);\n    };\n  }\n};\n\nvar setTransformOrigin = function setTransformOrigin(state) {\n  state.elements.popper.style.setProperty(cssVars.transformOrigin.var, toTransformOrigin(state.placement));\n};\n/* -------------------------------------------------------------------------------------------------\n  The position arrow modifier adds width, height and overrides the `top/left/right/bottom`\n  styles generated by popper.js to properly position the arrow\n* -----------------------------------------------------------------------------------------------*/\n\n\nexport var positionArrow = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: function fn(_ref5) {\n    var state = _ref5.state;\n    setArrowStyles(state);\n  }\n};\n\nvar setArrowStyles = function setArrowStyles(state) {\n  var _state$elements;\n\n  if (!state.placement) return;\n  var overrides = getArrowStyle(state.placement);\n\n  if ((_state$elements = state.elements) != null && _state$elements.arrow && overrides) {\n    var _Object$assign, _vars;\n\n    Object.assign(state.elements.arrow.style, (_Object$assign = {}, _defineProperty(_Object$assign, overrides.property, overrides.value), _defineProperty(_Object$assign, \"width\", cssVars.arrowSize.varRef), _defineProperty(_Object$assign, \"height\", cssVars.arrowSize.varRef), _defineProperty(_Object$assign, \"zIndex\", -1), _Object$assign));\n    var vars = (_vars = {}, _defineProperty(_vars, cssVars.arrowSizeHalf.var, \"calc(\" + cssVars.arrowSize.varRef + \" / 2)\"), _defineProperty(_vars, cssVars.arrowOffset.var, \"calc(\" + cssVars.arrowSizeHalf.varRef + \" * -1)\"), _vars);\n\n    for (var property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property]);\n    }\n  }\n};\n\nvar getArrowStyle = function getArrowStyle(placement) {\n  if (placement.startsWith(\"top\")) {\n    return {\n      property: \"bottom\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n\n  if (placement.startsWith(\"bottom\")) {\n    return {\n      property: \"top\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n\n  if (placement.startsWith(\"left\")) {\n    return {\n      property: \"right\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n\n  if (placement.startsWith(\"right\")) {\n    return {\n      property: \"left\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n};\n/* -------------------------------------------------------------------------------------------------\n  The inner arrow modifier, sets the placement styles for the inner arrow that forms\n  the popper arrow tip.\n* -----------------------------------------------------------------------------------------------*/\n\n\nexport var innerArrow = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: function fn(_ref6) {\n    var state = _ref6.state;\n    setInnerArrowStyles(state);\n  },\n  effect: function effect(_ref7) {\n    var state = _ref7.state;\n    return function () {\n      setInnerArrowStyles(state);\n    };\n  }\n};\n\nvar setInnerArrowStyles = function setInnerArrowStyles(state) {\n  if (!state.elements.arrow) return;\n  var inner = state.elements.arrow.querySelector(\"[data-popper-arrow-inner]\");\n  if (!inner) return;\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: getBoxShadow(state.placement)\n  });\n};","map":{"version":3,"mappings":"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","names":["getBoxShadow","toTransformOrigin","cssVars","matchWidth","name","enabled","phase","requires","fn","state","styles","popper","width","rects","reference","effect","elements","style","offsetWidth","transformOrigin","setTransformOrigin","setProperty","var","placement","positionArrow","setArrowStyles","overrides","getArrowStyle","arrow","Object","assign","property","value","arrowSize","varRef","vars","arrowSizeHalf","arrowOffset","startsWith","innerArrow","setInnerArrowStyles","inner","querySelector","transform","background","arrowBg","top","left","height","position","zIndex","boxShadow"],"sources":["../../src/modifiers.ts"],"sourcesContent":["import { Placement, Modifier, State } from \"@popperjs/core\"\nimport { getBoxShadow, toTransformOrigin, cssVars } from \"./utils\"\n\n/* -------------------------------------------------------------------------------------------------\n The match width modifier sets the popper width to match the reference.\n It us useful for custom selects, autocomplete, etc.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const matchWidth: Modifier<\"matchWidth\", any> = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: ({ state }) => {\n    state.styles.popper.width = `${state.rects.reference.width}px`\n  },\n  effect: ({ state }) => () => {\n    const reference = state.elements.reference as HTMLElement\n    state.elements.popper.style.width = `${reference.offsetWidth}px`\n  },\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The transform origin modifier sets the css `transformOrigin` value of the popper\n  based on the dynamic placement state of the popper.\n  \n  Useful when we need to animate/transition the popper.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const transformOrigin: Modifier<\"transformOrigin\", any> = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: ({ state }) => {\n    setTransformOrigin(state)\n  },\n  effect: ({ state }) => () => {\n    setTransformOrigin(state)\n  },\n}\n\nconst setTransformOrigin = (state: State) => {\n  state.elements.popper.style.setProperty(\n    cssVars.transformOrigin.var,\n    toTransformOrigin(state.placement),\n  )\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The position arrow modifier adds width, height and overrides the `top/left/right/bottom`\n  styles generated by popper.js to properly position the arrow\n* -----------------------------------------------------------------------------------------------*/\n\nexport const positionArrow: Modifier<\"positionArrow\", any> = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: ({ state }) => {\n    setArrowStyles(state)\n  },\n}\n\nconst setArrowStyles = (state: Partial<State>) => {\n  if (!state.placement) return\n  const overrides = getArrowStyle(state.placement)\n\n  if (state.elements?.arrow && overrides) {\n    Object.assign(state.elements.arrow.style, {\n      [overrides.property]: overrides.value,\n      width: cssVars.arrowSize.varRef,\n      height: cssVars.arrowSize.varRef,\n      zIndex: -1,\n    })\n\n    const vars = {\n      [cssVars.arrowSizeHalf.var]: `calc(${cssVars.arrowSize.varRef} / 2)`,\n      [cssVars.arrowOffset.var]: `calc(${cssVars.arrowSizeHalf.varRef} * -1)`,\n    }\n\n    for (const property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property])\n    }\n  }\n}\n\nconst getArrowStyle = (placement: Placement) => {\n  if (placement.startsWith(\"top\")) {\n    return { property: \"bottom\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"bottom\")) {\n    return { property: \"top\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"left\")) {\n    return { property: \"right\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"right\")) {\n    return { property: \"left\", value: cssVars.arrowOffset.varRef }\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The inner arrow modifier, sets the placement styles for the inner arrow that forms\n  the popper arrow tip.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const innerArrow: Modifier<\"innerArrow\", any> = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: ({ state }) => {\n    setInnerArrowStyles(state)\n  },\n  effect: ({ state }) => () => {\n    setInnerArrowStyles(state)\n  },\n}\n\nconst setInnerArrowStyles = (state: State) => {\n  if (!state.elements.arrow) return\n\n  const inner = state.elements.arrow.querySelector(\n    \"[data-popper-arrow-inner]\",\n  ) as HTMLElement | null\n\n  if (!inner) return\n\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: getBoxShadow(state.placement),\n  })\n}\n"]},"metadata":{},"sourceType":"module"}