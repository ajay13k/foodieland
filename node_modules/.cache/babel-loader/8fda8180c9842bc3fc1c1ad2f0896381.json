{"ast":null,"code":"import { isCssVar, isNumber, isString } from \"@chakra-ui/utils\";\nimport { backdropFilterTemplate, filterTemplate, getRingTemplate, getTransformGpuTemplate, getTransformTemplate, flexDirectionTemplate } from \"./templates\";\nimport { gradientTransform, globalSet } from \"./parse-gradient\";\n\nvar analyzeCSSValue = function analyzeCSSValue(value) {\n  var num = parseFloat(value.toString());\n  var unit = value.toString().replace(String(num), \"\");\n  return {\n    unitless: !unit,\n    value: num,\n    unit: unit\n  };\n};\n\nvar wrap = function wrap(str) {\n  return function (value) {\n    return str + \"(\" + value + \")\";\n  };\n};\n\nexport var transformFunctions = {\n  filter: function filter(value) {\n    return value !== \"auto\" ? value : filterTemplate;\n  },\n  backdropFilter: function backdropFilter(value) {\n    return value !== \"auto\" ? value : backdropFilterTemplate;\n  },\n  ring: function ring(value) {\n    return getRingTemplate(transformFunctions.px(value));\n  },\n  bgClip: function bgClip(value) {\n    return value === \"text\" ? {\n      color: \"transparent\",\n      backgroundClip: \"text\"\n    } : {\n      backgroundClip: value\n    };\n  },\n  transform: function transform(value) {\n    if (value === \"auto\") return getTransformTemplate();\n    if (value === \"auto-gpu\") return getTransformGpuTemplate();\n    return value;\n  },\n  px: function px(value) {\n    if (value == null) return value;\n\n    var _analyzeCSSValue = analyzeCSSValue(value),\n        unitless = _analyzeCSSValue.unitless;\n\n    return unitless || isNumber(value) ? value + \"px\" : value;\n  },\n  fraction: function fraction(value) {\n    return !isNumber(value) || value > 1 ? value : value * 100 + \"%\";\n  },\n  float: function float(value, theme) {\n    var map = {\n      left: \"right\",\n      right: \"left\"\n    };\n    return theme.direction === \"rtl\" ? map[value] : value;\n  },\n  degree: function degree(value) {\n    if (isCssVar(value) || value == null) return value;\n    var unitless = isString(value) && !value.endsWith(\"deg\");\n    return isNumber(value) || unitless ? value + \"deg\" : value;\n  },\n  gradient: gradientTransform,\n  blur: wrap(\"blur\"),\n  opacity: wrap(\"opacity\"),\n  brightness: wrap(\"brightness\"),\n  contrast: wrap(\"contrast\"),\n  dropShadow: wrap(\"drop-shadow\"),\n  grayscale: wrap(\"grayscale\"),\n  hueRotate: wrap(\"hue-rotate\"),\n  invert: wrap(\"invert\"),\n  saturate: wrap(\"saturate\"),\n  sepia: wrap(\"sepia\"),\n  bgImage: function bgImage(value) {\n    if (value == null) return value;\n    var prevent = isCSSFunction(value) || globalSet.has(value);\n    return !prevent ? \"url(\" + value + \")\" : value;\n  },\n  outline: function outline(value) {\n    var isNoneOrZero = String(value) === \"0\" || String(value) === \"none\";\n    return value !== null && isNoneOrZero ? {\n      outline: \"2px solid transparent\",\n      outlineOffset: \"2px\"\n    } : {\n      outline: value\n    };\n  },\n  flexDirection: function flexDirection(value) {\n    var _flexDirectionTemplat;\n\n    var _ref = (_flexDirectionTemplat = flexDirectionTemplate[value]) != null ? _flexDirectionTemplat : {},\n        space = _ref.space,\n        divide = _ref.divide;\n\n    var result = {\n      flexDirection: value\n    };\n    if (space) result[space] = 1;\n    if (divide) result[divide] = 1;\n    return result;\n  }\n};\n\nvar isCSSFunction = function isCSSFunction(value) {\n  return isString(value) && value.includes(\"(\") && value.includes(\")\");\n};","map":{"version":3,"mappings":"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","names":["isCssVar","isNumber","isString","backdropFilterTemplate","filterTemplate","getRingTemplate","getTransformGpuTemplate","getTransformTemplate","flexDirectionTemplate","gradientTransform","globalSet","analyzeCSSValue","value","num","parseFloat","toString","unit","replace","String","unitless","wrap","str","transformFunctions","filter","backdropFilter","ring","px","bgClip","color","backgroundClip","transform","fraction","float","theme","map","left","right","direction","degree","endsWith","gradient","blur","opacity","brightness","contrast","dropShadow","grayscale","hueRotate","invert","saturate","sepia","bgImage","prevent","isCSSFunction","has","outline","isNoneOrZero","outlineOffset","flexDirection","space","divide","result","includes"],"sources":["../../../src/utils/transform-functions.ts"],"sourcesContent":["import { Dict, isCssVar, isNumber, isString } from \"@chakra-ui/utils\"\nimport {\n  backdropFilterTemplate,\n  filterTemplate,\n  getRingTemplate,\n  getTransformGpuTemplate,\n  getTransformTemplate,\n  flexDirectionTemplate,\n} from \"./templates\"\nimport { gradientTransform, globalSet } from \"./parse-gradient\"\n\nconst analyzeCSSValue = (value: number | string) => {\n  const num = parseFloat(value.toString())\n  const unit = value.toString().replace(String(num), \"\")\n  return { unitless: !unit, value: num, unit }\n}\n\nconst wrap = (str: string) => (value: any) => `${str}(${value})`\n\nexport const transformFunctions = {\n  filter(value: any) {\n    return value !== \"auto\" ? value : filterTemplate\n  },\n  backdropFilter(value: any) {\n    return value !== \"auto\" ? value : backdropFilterTemplate\n  },\n  ring(value: string) {\n    return getRingTemplate(transformFunctions.px(value))\n  },\n  bgClip(value: string) {\n    return value === \"text\"\n      ? { color: \"transparent\", backgroundClip: \"text\" }\n      : { backgroundClip: value }\n  },\n  transform(value: any) {\n    if (value === \"auto\") return getTransformTemplate()\n    if (value === \"auto-gpu\") return getTransformGpuTemplate()\n    return value\n  },\n  px(value: number | string) {\n    if (value == null) return value\n    const { unitless } = analyzeCSSValue(value)\n    return unitless || isNumber(value) ? `${value}px` : value\n  },\n  fraction(value: any) {\n    return !isNumber(value) || value > 1 ? value : `${value * 100}%`\n  },\n  float(value: any, theme: Dict) {\n    const map = { left: \"right\", right: \"left\" }\n    return theme.direction === \"rtl\" ? map[value] : value\n  },\n  degree(value: any) {\n    if (isCssVar(value) || value == null) return value\n    const unitless = isString(value) && !value.endsWith(\"deg\")\n    return isNumber(value) || unitless ? `${value}deg` : value\n  },\n  gradient: gradientTransform,\n  blur: wrap(\"blur\"),\n  opacity: wrap(\"opacity\"),\n  brightness: wrap(\"brightness\"),\n  contrast: wrap(\"contrast\"),\n  dropShadow: wrap(\"drop-shadow\"),\n  grayscale: wrap(\"grayscale\"),\n  hueRotate: wrap(\"hue-rotate\"),\n  invert: wrap(\"invert\"),\n  saturate: wrap(\"saturate\"),\n  sepia: wrap(\"sepia\"),\n  bgImage(value: any) {\n    if (value == null) return value\n    const prevent = isCSSFunction(value) || globalSet.has(value)\n    return !prevent ? `url(${value})` : value\n  },\n  outline(value: any) {\n    const isNoneOrZero = String(value) === \"0\" || String(value) === \"none\"\n    return value !== null && isNoneOrZero\n      ? { outline: \"2px solid transparent\", outlineOffset: \"2px\" }\n      : { outline: value }\n  },\n  flexDirection(value: any) {\n    const { space, divide } = flexDirectionTemplate[value] ?? {}\n    const result = { flexDirection: value }\n    if (space) result[space] = 1\n    if (divide) result[divide] = 1\n    return result\n  },\n}\n\nconst isCSSFunction = (value: unknown) => {\n  return isString(value) && value.includes(\"(\") && value.includes(\")\")\n}\n"]},"metadata":{},"sourceType":"module"}