{"ast":null,"code":"import { getColor, mode, transparentize } from \"@chakra-ui/theme-tools\";\nvar baseStyle = {\n  px: 1,\n  textTransform: \"uppercase\",\n  fontSize: \"xs\",\n  borderRadius: \"sm\",\n  fontWeight: \"bold\"\n};\n\nfunction variantSolid(props) {\n  var c = props.colorScheme,\n      theme = props.theme;\n  var dark = transparentize(c + \".500\", 0.6)(theme);\n  return {\n    bg: mode(c + \".500\", dark)(props),\n    color: mode(\"white\", \"whiteAlpha.800\")(props)\n  };\n}\n\nfunction variantSubtle(props) {\n  var c = props.colorScheme,\n      theme = props.theme;\n  var darkBg = transparentize(c + \".200\", 0.16)(theme);\n  return {\n    bg: mode(c + \".100\", darkBg)(props),\n    color: mode(c + \".800\", c + \".200\")(props)\n  };\n}\n\nfunction variantOutline(props) {\n  var c = props.colorScheme,\n      theme = props.theme;\n  var darkColor = transparentize(c + \".200\", 0.8)(theme);\n  var lightColor = getColor(theme, c + \".500\");\n  var color = mode(lightColor, darkColor)(props);\n  return {\n    color: color,\n    boxShadow: \"inset 0 0 0px 1px \" + color\n  };\n}\n\nvar variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline\n};\nvar defaultProps = {\n  variant: \"subtle\",\n  colorScheme: \"gray\"\n};\nexport default {\n  baseStyle: baseStyle,\n  variants: variants,\n  defaultProps: defaultProps\n};","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,EAAmBC,IAAnB,EAAyBC,cAAzB,QAA+C,wBAA/C;AAEA,IAAMC,SAAS,GAAG;EAChBC,EAAE,EAAE,CADY;EAEhBC,aAAa,EAAE,WAFC;EAGhBC,QAAQ,EAAE,IAHM;EAIhBC,YAAY,EAAE,IAJE;EAKhBC,UAAU,EAAE;AALI,CAAlB;;AAQA,SAASC,YAAT,CAAsBC,KAAtB,EAAkD;EAChD,IAAqBC,CAArB,GAAkCD,KAAlC,CAAQE,WAAR;EAAA,IAAwBC,KAAxB,GAAkCH,KAAlC,CAAwBG,KAAxB;EACA,IAAMC,IAAI,GAAGZ,cAAc,CAAIS,CAAJ,WAAa,GAAb,CAAdT,CAAgCW,KAAhCX,CAAb;EACA,OAAO;IACLa,EAAE,EAAEd,IAAI,CAAIU,CAAJ,WAAaG,IAAb,CAAJb,CAAuBS,KAAvBT,CADC;IAELe,KAAK,EAAEf,IAAI,2BAAJA,CAAgCS,KAAhCT;EAFF,CAAP;AAID;;AAED,SAASgB,aAAT,CAAuBP,KAAvB,EAAmD;EACjD,IAAqBC,CAArB,GAAkCD,KAAlC,CAAQE,WAAR;EAAA,IAAwBC,KAAxB,GAAkCH,KAAlC,CAAwBG,KAAxB;EACA,IAAMK,MAAM,GAAGhB,cAAc,CAAIS,CAAJ,WAAa,IAAb,CAAdT,CAAiCW,KAAjCX,CAAf;EACA,OAAO;IACLa,EAAE,EAAEd,IAAI,CAAIU,CAAJ,WAAaO,MAAb,CAAJjB,CAAyBS,KAAzBT,CADC;IAELe,KAAK,EAAEf,IAAI,CAAIU,CAAJ,WAAgBA,CAAhB,UAAJV,CAA6BS,KAA7BT;EAFF,CAAP;AAID;;AAED,SAASkB,cAAT,CAAwBT,KAAxB,EAAoD;EAClD,IAAqBC,CAArB,GAAkCD,KAAlC,CAAQE,WAAR;EAAA,IAAwBC,KAAxB,GAAkCH,KAAlC,CAAwBG,KAAxB;EACA,IAAMO,SAAS,GAAGlB,cAAc,CAAIS,CAAJ,WAAa,GAAb,CAAdT,CAAgCW,KAAhCX,CAAlB;EACA,IAAMmB,UAAU,GAAGrB,QAAQ,CAACa,KAAD,EAAWF,CAAX,UAA3B;EACA,IAAMK,KAAK,GAAGf,IAAI,CAACoB,UAAD,EAAaD,SAAb,CAAJnB,CAA4BS,KAA5BT,CAAd;EAEA,OAAO;IACLe,KADK,EACLA,KADK;IAELM,SAAS,yBAAuBN;EAF3B,CAAP;AAID;;AAED,IAAMO,QAAQ,GAAG;EACfC,KAAK,EAAEf,YADQ;EAEfgB,MAAM,EAAER,aAFO;EAGfS,OAAO,EAAEP;AAHM,CAAjB;AAMA,IAAMQ,YAAY,GAAG;EACnBC,OAAO,EAAE,QADU;EAEnBhB,WAAW,EAAE;AAFM,CAArB;AAKA,eAAe;EACbT,SADa,EACbA,SADa;EAEboB,QAFa,EAEbA,QAFa;EAGbI;AAHa,CAAf","names":["getColor","mode","transparentize","baseStyle","px","textTransform","fontSize","borderRadius","fontWeight","variantSolid","props","c","colorScheme","theme","dark","bg","color","variantSubtle","darkBg","variantOutline","darkColor","lightColor","boxShadow","variants","solid","subtle","outline","defaultProps","variant"],"sources":["../../../src/components/badge.ts"],"sourcesContent":["import { getColor, mode, transparentize } from \"@chakra-ui/theme-tools\"\n\nconst baseStyle = {\n  px: 1,\n  textTransform: \"uppercase\",\n  fontSize: \"xs\",\n  borderRadius: \"sm\",\n  fontWeight: \"bold\",\n}\n\nfunction variantSolid(props: Record<string, any>) {\n  const { colorScheme: c, theme } = props\n  const dark = transparentize(`${c}.500`, 0.6)(theme)\n  return {\n    bg: mode(`${c}.500`, dark)(props),\n    color: mode(`white`, `whiteAlpha.800`)(props),\n  }\n}\n\nfunction variantSubtle(props: Record<string, any>) {\n  const { colorScheme: c, theme } = props\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme)\n  return {\n    bg: mode(`${c}.100`, darkBg)(props),\n    color: mode(`${c}.800`, `${c}.200`)(props),\n  }\n}\n\nfunction variantOutline(props: Record<string, any>) {\n  const { colorScheme: c, theme } = props\n  const darkColor = transparentize(`${c}.200`, 0.8)(theme)\n  const lightColor = getColor(theme, `${c}.500`)\n  const color = mode(lightColor, darkColor)(props)\n\n  return {\n    color,\n    boxShadow: `inset 0 0 0px 1px ${color}`,\n  }\n}\n\nconst variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline,\n}\n\nconst defaultProps = {\n  variant: \"subtle\",\n  colorScheme: \"gray\",\n}\n\nexport default {\n  baseStyle,\n  variants,\n  defaultProps,\n}\n"]},"metadata":{},"sourceType":"module"}