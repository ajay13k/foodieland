{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { mapResponsive, isNumber, isNull, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { Grid } from \"./grid\";\n/**\n * SimpleGrid\n *\n * React component make that providers a simpler interface, and\n * make its easy to create responsive grid layouts.\n *\n * @see Docs https://chakra-ui.com/docs/layout/simple-grid\n */\n\nexport var SimpleGrid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var columns = props.columns,\n      spacingX = props.spacingX,\n      spacingY = props.spacingY,\n      spacing = props.spacing,\n      minChildWidth = props.minChildWidth,\n      rest = _objectWithoutPropertiesLoose(props, [\"columns\", \"spacingX\", \"spacingY\", \"spacing\", \"minChildWidth\"]);\n\n  var templateColumns = minChildWidth ? widthToColumns(minChildWidth) : countToColumns(columns);\n  return /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    gap: spacing,\n    columnGap: spacingX,\n    rowGap: spacingY,\n    templateColumns: templateColumns\n  }, rest));\n});\n\nif (__DEV__) {\n  SimpleGrid.displayName = \"SimpleGrid\";\n}\n\nfunction toPx(n) {\n  return isNumber(n) ? n + \"px\" : n;\n}\n\nfunction widthToColumns(width) {\n  return mapResponsive(width, function (value) {\n    return isNull(value) ? null : \"repeat(auto-fit, minmax(\" + toPx(value) + \", 1fr))\";\n  });\n}\n\nfunction countToColumns(count) {\n  return mapResponsive(count, function (value) {\n    return isNull(value) ? null : \"repeat(\" + value + \", minmax(0, 1fr))\";\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAA0BA,UAA1B,QAA4C,mBAA5C;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,MAAlC,EAA0CC,OAA1C,QAAyD,kBAAzD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAgC,QAAhC;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,UAAU,gBAAGP,UAAU,CAAyB,UAACQ,KAAD,EAAQC,GAAR,EAAgB;EAC3E,IAAQC,OAAR,GAAyEF,KAAzE,CAAQE,OAAR;EAAA,IAAiBC,QAAjB,GAAyEH,KAAzE,CAAiBG,QAAjB;EAAA,IAA2BC,QAA3B,GAAyEJ,KAAzE,CAA2BI,QAA3B;EAAA,IAAqCC,OAArC,GAAyEL,KAAzE,CAAqCK,OAArC;EAAA,IAA8CC,aAA9C,GAAyEN,KAAzE,CAA8CM,aAA9C;EAAA,IAAgEC,IAAhE,iCAAyEP,KAAzE;;EAEA,IAAMQ,eAAe,GAAGF,aAAa,GACjCG,cAAc,CAACH,aAAD,CADmB,GAEjCI,cAAc,CAACR,OAAD,CAFlB;EAIA,oBACEL,oBAACC,IAAD;IACEG,GAAG,EAAEA,GADP;IAEEU,GAAG,EAAEN,OAFP;IAGEO,SAAS,EAAET,QAHb;IAIEU,MAAM,EAAET,QAJV;IAKEI,eAAe,EAAEA;EALnB,GAMMD,IANN,EADF;AAPkC,EAA7B;;AAmBP,IAAIX,OAAJ,EAAa;EACXG,UAAU,CAACe,WAAXf,GAAyB,YAAzBA;AACD;;AAED,SAASgB,IAAT,CAAcC,CAAd,EAAkC;EAChC,OAAOtB,QAAQ,CAACsB,CAAD,CAARtB,GAAiBsB,CAAjB,UAAyBA,CAAhC;AACD;;AAED,SAASP,cAAT,CAAwBQ,KAAxB,EAAoC;EAClC,OAAOxB,aAAa,CAACwB,KAAD,EAASC,eAAD;IAAA,OAC1BvB,MAAM,CAACuB,KAAD,CAANvB,GAAgB,IAAhBA,gCAAkDoB,IAAI,CAACG,KAAD,CAAtD,YAD0B;EAAA,CAAR,CAApB;AAGD;;AAED,SAASR,cAAT,CAAwBS,KAAxB,EAAoC;EAClC,OAAO1B,aAAa,CAAC0B,KAAD,EAASD,eAAD;IAAA,OAC1BvB,MAAM,CAACuB,KAAD,CAANvB,GAAgB,IAAhBA,eAAiCuB,KAAjC,sBAD0B;EAAA,CAAR,CAApB;AAGD","names":["forwardRef","mapResponsive","isNumber","isNull","__DEV__","React","Grid","SimpleGrid","props","ref","columns","spacingX","spacingY","spacing","minChildWidth","rest","templateColumns","widthToColumns","countToColumns","gap","columnGap","rowGap","displayName","toPx","n","width","value","count"],"sources":["../../src/simple-grid.tsx"],"sourcesContent":["import { ResponsiveValue, forwardRef } from \"@chakra-ui/system\"\nimport { mapResponsive, isNumber, isNull, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { Grid, GridProps } from \"./grid\"\n\ninterface SimpleGridOptions {\n  /**\n   * The width at which child elements will break into columns. Pass a number for pixel values or a string for any other valid CSS length.\n   */\n  minChildWidth?: GridProps[\"minWidth\"]\n  /**\n   * The number of columns\n   */\n  columns?: ResponsiveValue<number>\n  /**\n   * The gap between the grid items\n   */\n  spacing?: GridProps[\"gridGap\"]\n  /**\n   * The column gap between the grid items\n   */\n  spacingX?: GridProps[\"gridGap\"]\n  /**\n   * The row gap between the grid items\n   */\n  spacingY?: GridProps[\"gridGap\"]\n}\n\nexport interface SimpleGridProps extends GridProps, SimpleGridOptions {}\n\n/**\n * SimpleGrid\n *\n * React component make that providers a simpler interface, and\n * make its easy to create responsive grid layouts.\n *\n * @see Docs https://chakra-ui.com/docs/layout/simple-grid\n */\nexport const SimpleGrid = forwardRef<SimpleGridProps, \"div\">((props, ref) => {\n  const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props\n\n  const templateColumns = minChildWidth\n    ? widthToColumns(minChildWidth)\n    : countToColumns(columns)\n\n  return (\n    <Grid\n      ref={ref}\n      gap={spacing}\n      columnGap={spacingX}\n      rowGap={spacingY}\n      templateColumns={templateColumns}\n      {...rest}\n    />\n  )\n})\n\nif (__DEV__) {\n  SimpleGrid.displayName = \"SimpleGrid\"\n}\n\nfunction toPx(n: string | number) {\n  return isNumber(n) ? `${n}px` : n\n}\n\nfunction widthToColumns(width: any) {\n  return mapResponsive(width, (value) =>\n    isNull(value) ? null : `repeat(auto-fit, minmax(${toPx(value)}, 1fr))`,\n  )\n}\n\nfunction countToColumns(count: any) {\n  return mapResponsive(count, (value) =>\n    isNull(value) ? null : `repeat(${value}, minmax(0, 1fr))`,\n  )\n}\n"]},"metadata":{},"sourceType":"module"}