{"ast":null,"code":"import _slicedToArray from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { useForceUpdate, useSafeLayoutEffect } from \"@chakra-ui/hooks\";\nimport { isBrowser, __DEV__ } from \"@chakra-ui/utils\";\nimport { createContext } from \"@chakra-ui/react-utils\";\nimport * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { usePortalManager } from \"./portal-manager\";\n\nvar _createContext = createContext({\n  strict: false,\n  name: \"PortalContext\"\n}),\n    _createContext2 = _slicedToArray(_createContext, 2),\n    PortalContextProvider = _createContext2[0],\n    usePortalContext = _createContext2[1];\n\nvar PORTAL_CLASSNAME = \"chakra-portal\";\nvar PORTAL_SELECTOR = \".chakra-portal\";\n\nvar Container = function Container(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chakra-portal-zIndex\",\n    style: {\n      position: \"absolute\",\n      zIndex: props.zIndex,\n      top: 0,\n      left: 0,\n      right: 0 // NB: Don't add `bottom: 0`, it makes the entire app unusable\n      // @see https://github.com/chakra-ui/chakra-ui/issues/3201\n\n    }\n  }, props.children);\n};\n/**\n * Portal that uses `document.body` as container\n */\n\n\nvar DefaultPortal = function DefaultPortal(props) {\n  var appendToParentPortal = props.appendToParentPortal,\n      children = props.children;\n  var tempNode = React.useRef(null);\n  var portal = React.useRef(null);\n  var forceUpdate = useForceUpdate();\n  var parentPortal = usePortalContext();\n  var manager = usePortalManager();\n  useSafeLayoutEffect(function () {\n    if (!tempNode.current) return;\n    var doc = tempNode.current.ownerDocument;\n    var host = appendToParentPortal ? parentPortal != null ? parentPortal : doc.body : doc.body;\n    if (!host) return;\n    portal.current = doc.createElement(\"div\");\n    portal.current.className = PORTAL_CLASSNAME;\n    host.appendChild(portal.current);\n    forceUpdate();\n    var portalNode = portal.current;\n    return function () {\n      if (host.contains(portalNode)) {\n        host.removeChild(portalNode);\n      }\n    };\n  }, []);\n\n  var _children = manager != null && manager.zIndex ? /*#__PURE__*/React.createElement(Container, {\n    zIndex: manager == null ? void 0 : manager.zIndex\n  }, children) : children;\n\n  return portal.current ? /*#__PURE__*/createPortal( /*#__PURE__*/React.createElement(PortalContextProvider, {\n    value: portal.current\n  }, _children), portal.current) : /*#__PURE__*/React.createElement(\"span\", {\n    ref: tempNode\n  });\n};\n/**\n * Portal that uses a custom container\n */\n\n\nvar ContainerPortal = function ContainerPortal(props) {\n  var children = props.children,\n      containerRef = props.containerRef,\n      appendToParentPortal = props.appendToParentPortal;\n  var containerEl = containerRef.current;\n  var host = containerEl != null ? containerEl : isBrowser ? document.body : undefined;\n  var portal = React.useMemo(function () {\n    var node = containerEl == null ? void 0 : containerEl.ownerDocument.createElement(\"div\");\n    if (node) node.className = PORTAL_CLASSNAME;\n    return node;\n  }, [containerEl]);\n  var forceUpdate = useForceUpdate();\n  useSafeLayoutEffect(function () {\n    forceUpdate();\n  }, []);\n  useSafeLayoutEffect(function () {\n    if (!portal || !host) return;\n    host.appendChild(portal);\n    return function () {\n      host.removeChild(portal);\n    };\n  }, [portal, host]);\n\n  if (host && portal) {\n    return /*#__PURE__*/createPortal( /*#__PURE__*/React.createElement(PortalContextProvider, {\n      value: appendToParentPortal ? portal : null\n    }, children), portal);\n  }\n\n  return null;\n};\n/**\n * Portal\n *\n * Declarative component used to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * @see Docs https://chakra-ui.com/docs/components/portal\n */\n\n\nexport function Portal(props) {\n  var containerRef = props.containerRef,\n      rest = _objectWithoutPropertiesLoose(props, [\"containerRef\"]);\n\n  return containerRef ? /*#__PURE__*/React.createElement(ContainerPortal, _extends({\n    containerRef: containerRef\n  }, rest)) : /*#__PURE__*/React.createElement(DefaultPortal, rest);\n}\nPortal.defaultProps = {\n  appendToParentPortal: true\n};\nPortal.className = PORTAL_CLASSNAME;\nPortal.selector = PORTAL_SELECTOR;\n\nif (__DEV__) {\n  Portal.displayName = \"Portal\";\n}","map":{"version":3,"mappings":"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","names":["useForceUpdate","useSafeLayoutEffect","isBrowser","__DEV__","createContext","React","createPortal","usePortalManager","strict","name","PortalContextProvider","usePortalContext","PORTAL_CLASSNAME","PORTAL_SELECTOR","Container","props","className","style","position","zIndex","top","left","right","children","DefaultPortal","appendToParentPortal","tempNode","useRef","portal","forceUpdate","parentPortal","manager","current","doc","ownerDocument","host","body","createElement","appendChild","portalNode","contains","removeChild","_children","value","ref","ContainerPortal","containerRef","containerEl","document","undefined","useMemo","node","Portal","rest","_objectWithoutPropertiesLoose","defaultProps","selector","displayName"],"sources":["../../src/portal.tsx"],"sourcesContent":["import { useForceUpdate, useSafeLayoutEffect } from \"@chakra-ui/hooks\"\nimport { isBrowser, __DEV__ } from \"@chakra-ui/utils\"\nimport { createContext } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\nimport { createPortal } from \"react-dom\"\nimport { usePortalManager } from \"./portal-manager\"\n\ntype PortalContext = HTMLDivElement | null\n\nconst [PortalContextProvider, usePortalContext] = createContext<PortalContext>({\n  strict: false,\n  name: \"PortalContext\",\n})\n\nconst PORTAL_CLASSNAME = \"chakra-portal\"\nconst PORTAL_SELECTOR = `.chakra-portal`\n\nconst Container: React.FC<{ zIndex: number }> = (props) => (\n  <div\n    className=\"chakra-portal-zIndex\"\n    style={{\n      position: \"absolute\",\n      zIndex: props.zIndex,\n      top: 0,\n      left: 0,\n      right: 0,\n      // NB: Don't add `bottom: 0`, it makes the entire app unusable\n      // @see https://github.com/chakra-ui/chakra-ui/issues/3201\n    }}\n  >\n    {props.children}\n  </div>\n)\n\n/**\n * Portal that uses `document.body` as container\n */\nconst DefaultPortal: React.FC<{ appendToParentPortal?: boolean }> = (props) => {\n  const { appendToParentPortal, children } = props\n\n  const tempNode = React.useRef<HTMLDivElement | null>(null)\n  const portal = React.useRef<HTMLDivElement | null>(null)\n\n  const forceUpdate = useForceUpdate()\n\n  const parentPortal = usePortalContext()\n  const manager = usePortalManager()\n\n  useSafeLayoutEffect(() => {\n    if (!tempNode.current) return\n\n    const doc = tempNode.current!.ownerDocument\n    const host = appendToParentPortal ? parentPortal ?? doc.body : doc.body\n\n    if (!host) return\n\n    portal.current = doc.createElement(\"div\")\n    portal.current.className = PORTAL_CLASSNAME\n\n    host.appendChild(portal.current)\n    forceUpdate()\n\n    const portalNode = portal.current\n    return () => {\n      if (host.contains(portalNode)) {\n        host.removeChild(portalNode)\n      }\n    }\n  }, [])\n\n  const _children = manager?.zIndex ? (\n    <Container zIndex={manager?.zIndex}>{children}</Container>\n  ) : (\n    children\n  )\n\n  return portal.current ? (\n    createPortal(\n      <PortalContextProvider value={portal.current}>\n        {_children}\n      </PortalContextProvider>,\n      portal.current,\n    )\n  ) : (\n    <span ref={tempNode} />\n  )\n}\n\ninterface ContainerPortalProps {\n  containerRef: React.RefObject<HTMLElement | null>\n  appendToParentPortal?: boolean\n}\n\n/**\n * Portal that uses a custom container\n */\nconst ContainerPortal: React.FC<ContainerPortalProps> = (props) => {\n  const { children, containerRef, appendToParentPortal } = props\n  const containerEl = containerRef.current\n  const host = containerEl ?? (isBrowser ? document.body : undefined)\n\n  const portal = React.useMemo(() => {\n    const node = containerEl?.ownerDocument.createElement(\"div\")\n    if (node) node.className = PORTAL_CLASSNAME\n    return node\n  }, [containerEl])\n\n  const forceUpdate = useForceUpdate()\n\n  useSafeLayoutEffect(() => {\n    forceUpdate()\n  }, [])\n\n  useSafeLayoutEffect(() => {\n    if (!portal || !host) return\n    host.appendChild(portal)\n    return () => {\n      host.removeChild(portal)\n    }\n  }, [portal, host])\n\n  if (host && portal) {\n    return createPortal(\n      <PortalContextProvider value={appendToParentPortal ? portal : null}>\n        {children}\n      </PortalContextProvider>,\n      portal,\n    )\n  }\n\n  return null\n}\n\nexport interface PortalProps {\n  /**\n   * The `ref` to the component where the portal will be attached to.\n   */\n  containerRef?: React.RefObject<HTMLElement | null>\n  /**\n   * The content or node you'll like to portal\n   */\n  children: React.ReactNode\n  /**\n   * If `true`, the portal will check if it is within a parent portal\n   * and append itself to the parent's portal node.\n   * This provides nesting for portals.\n   *\n   * If `false`, the portal will always append to `document.body`\n   * regardless of nesting. It is used to opt out of portal nesting.\n   */\n  appendToParentPortal?: boolean\n}\n\n/**\n * Portal\n *\n * Declarative component used to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * @see Docs https://chakra-ui.com/docs/components/portal\n */\n\nexport function Portal(props: PortalProps) {\n  const { containerRef, ...rest } = props\n  return containerRef ? (\n    <ContainerPortal containerRef={containerRef} {...rest} />\n  ) : (\n    <DefaultPortal {...rest} />\n  )\n}\n\nPortal.defaultProps = {\n  appendToParentPortal: true,\n}\n\nPortal.className = PORTAL_CLASSNAME\nPortal.selector = PORTAL_SELECTOR\n\nif (__DEV__) {\n  Portal.displayName = \"Portal\"\n}\n"]},"metadata":{},"sourceType":"module"}