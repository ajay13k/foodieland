{"ast":null,"code":"import { isObject } from \"@chakra-ui/utils\";\nimport { mergeThemeOverride } from \"../extend-theme\";\nexport function withDefaultSize(_ref) {\n  var size = _ref.size,\n      components = _ref.components;\n  return function (theme) {\n    var names = Object.keys(theme.components || {});\n\n    if (Array.isArray(components)) {\n      names = components;\n    } else if (isObject(components)) {\n      names = Object.keys(components);\n    }\n\n    return mergeThemeOverride(theme, {\n      components: Object.fromEntries(names.map(function (componentName) {\n        var withSize = {\n          defaultProps: {\n            size: size\n          }\n        };\n        return [componentName, withSize];\n      }))\n    });\n  };\n}","map":{"version":3,"mappings":"AACA,SAAeA,QAAf,QAA+B,kBAA/B;AACA,SAASC,kBAAT,QAAmD,iBAAnD;AAEA,OAAO,SAASC,eAAT,OAMY;EAAA,IALjBC,IAKiB,QALjBA,IAKiB;EAAA,IAJjBC,UAIiB,QAJjBA,UAIiB;EACjB,OAAQC,eAAD,EAAW;IAChB,IAAIC,KAAK,GAAGC,MAAM,CAACC,IAAPD,CAAYF,KAAK,CAACD,UAANC,IAAoB,EAAhCE,CAAZ;;IAEA,IAAIE,KAAK,CAACC,OAAND,CAAcL,UAAdK,CAAJ,EAA+B;MAC7BH,KAAK,GAAGF,UAARE;IADF,OAEO,IAAIN,QAAQ,CAACI,UAAD,CAAZ,EAA0B;MAC/BE,KAAK,GAAGC,MAAM,CAACC,IAAPD,CAAYH,UAAZG,CAARD;IACD;;IAED,OAAOL,kBAAkB,CAACI,KAAD,EAAQ;MAC/BD,UAAU,EAAEG,MAAM,CAACI,WAAPJ,CACVD,KAAK,CAACM,GAANN,CAAWO,uBAAD,EAAmB;QAC3B,IAAMC,QAAQ,GAAG;UACfC,YAAY,EAAE;YACZZ;UADY;QADC,CAAjB;QAKA,OAAO,CAACU,aAAD,EAAgBC,QAAhB,CAAP;MANF,EADUP;IADmB,CAAR,CAAzB;EATF;AAsBD","names":["isObject","mergeThemeOverride","withDefaultSize","size","components","theme","names","Object","keys","Array","isArray","fromEntries","map","componentName","withSize","defaultProps"],"sources":["../../../src/theme-extensions/with-default-size.ts"],"sourcesContent":["import { ThemingProps } from \"@chakra-ui/system\"\nimport { Dict, isObject } from \"@chakra-ui/utils\"\nimport { mergeThemeOverride, ThemeExtension } from \"../extend-theme\"\n\nexport function withDefaultSize({\n  size,\n  components,\n}: {\n  size: ThemingProps[\"size\"]\n  components?: string[] | Dict\n}): ThemeExtension {\n  return (theme) => {\n    let names = Object.keys(theme.components || {})\n\n    if (Array.isArray(components)) {\n      names = components\n    } else if (isObject(components)) {\n      names = Object.keys(components)\n    }\n\n    return mergeThemeOverride(theme, {\n      components: Object.fromEntries(\n        names.map((componentName) => {\n          const withSize = {\n            defaultProps: {\n              size,\n            },\n          }\n          return [componentName, withSize]\n        }),\n      ),\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}