{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { slideTransition, TransitionEasings, withDelay } from \"./transition-utils\";\nvar defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TransitionEasings.easeInOut\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180\n  }\n};\nvar variants = {\n  exit: function exit(_ref) {\n    var _transition$exit;\n\n    var direction = _ref.direction,\n        transition = _ref.transition,\n        transitionEnd = _ref.transitionEnd,\n        delay = _ref.delay;\n\n    var _slideTransition = slideTransition({\n      direction: direction\n    }),\n        exitStyles = _slideTransition.exit;\n\n    return _extends({}, exitStyles, {\n      transition: (_transition$exit = transition == null ? void 0 : transition.exit) != null ? _transition$exit : withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    });\n  },\n  enter: function enter(_ref2) {\n    var _transition$enter;\n\n    var direction = _ref2.direction,\n        transitionEnd = _ref2.transitionEnd,\n        transition = _ref2.transition,\n        delay = _ref2.delay;\n\n    var _slideTransition2 = slideTransition({\n      direction: direction\n    }),\n        enterStyles = _slideTransition2.enter;\n\n    return _extends({}, enterStyles, {\n      transition: (_transition$enter = transition == null ? void 0 : transition.enter) != null ? _transition$enter : withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    });\n  }\n};\nexport var Slide = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$direction = props.direction,\n      direction = _props$direction === void 0 ? \"right\" : _props$direction,\n      style = props.style,\n      unmountOnExit = props.unmountOnExit,\n      isOpen = props.in,\n      className = props.className,\n      transition = props.transition,\n      transitionEnd = props.transitionEnd,\n      delay = props.delay,\n      rest = _objectWithoutPropertiesLoose(props, [\"direction\", \"style\", \"unmountOnExit\", \"in\", \"className\", \"transition\", \"transitionEnd\", \"delay\"]);\n\n  var transitionStyles = slideTransition({\n    direction: direction\n  });\n  var computedStyle = Object.assign({\n    position: \"fixed\"\n  }, transitionStyles.position, style);\n  var show = unmountOnExit ? isOpen && unmountOnExit : true;\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  var custom = {\n    transitionEnd: transitionEnd,\n    transition: transition,\n    direction: direction,\n    delay: delay\n  };\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    custom: custom\n  }, show && /*#__PURE__*/React.createElement(motion.div, _extends({\n    ref: ref,\n    initial: \"exit\",\n    className: cx(\"chakra-slide\", className),\n    animate: animate,\n    exit: \"exit\",\n    custom: custom,\n    variants: variants,\n    style: computedStyle\n  }, rest)));\n});\n\nif (__DEV__) {\n  Slide.displayName = \"Slide\";\n}","map":{"version":3,"mappings":"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","names":["cx","__DEV__","AnimatePresence","motion","React","slideTransition","TransitionEasings","withDelay","defaultTransition","exit","duration","ease","easeInOut","enter","type","damping","stiffness","variants","direction","transition","transitionEnd","delay","exitStyles","enterStyles","Slide","forwardRef","props","ref","style","unmountOnExit","isOpen","in","className","rest","transitionStyles","computedStyle","Object","assign","position","show","animate","custom","div","initial","displayName"],"sources":["../../src/slide.tsx"],"sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  MotionStyle,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  SlideDirection,\n  slideTransition,\n  TransitionEasings,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\nexport type { SlideDirection }\n\nconst defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TransitionEasings.easeInOut,\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180,\n  },\n}\n\nconst variants: Variants<SlideOptions> = {\n  exit: ({ direction, transition, transitionEnd, delay }) => {\n    const { exit: exitStyles } = slideTransition({ direction })\n    return {\n      ...exitStyles,\n      transition:\n        transition?.exit ?? withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd?.exit,\n    }\n  },\n  enter: ({ direction, transitionEnd, transition, delay }) => {\n    const { enter: enterStyles } = slideTransition({ direction })\n    return {\n      ...enterStyles,\n      transition:\n        transition?.enter ?? withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd?.enter,\n    }\n  },\n}\n\nexport interface SlideOptions {\n  /**\n   * The direction to slide from\n   * @default \"right\"\n   */\n  direction?: SlideDirection\n}\n\nexport interface SlideProps\n  extends WithTransitionConfig<HTMLMotionProps<\"div\">>,\n    SlideOptions {}\n\nexport const Slide = React.forwardRef<HTMLDivElement, SlideProps>(\n  (props, ref) => {\n    const {\n      direction = \"right\",\n      style,\n      unmountOnExit,\n      in: isOpen,\n      className,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const transitionStyles = slideTransition({ direction })\n    const computedStyle: MotionStyle = Object.assign(\n      { position: \"fixed\" },\n      transitionStyles.position,\n      style,\n    )\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = { transitionEnd, transition, direction, delay }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            initial=\"exit\"\n            className={cx(\"chakra-slide\", className)}\n            animate={animate}\n            exit=\"exit\"\n            custom={custom}\n            variants={variants as _Variants}\n            style={computedStyle}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  Slide.displayName = \"Slide\"\n}\n"]},"metadata":{},"sourceType":"module"}