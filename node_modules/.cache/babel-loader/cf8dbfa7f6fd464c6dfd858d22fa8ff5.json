{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { TransitionDefaults, withDelay } from \"./transition-utils\";\nvar variants = {\n  exit: function exit(_ref) {\n    var _transition$exit;\n\n    var reverse = _ref.reverse,\n        initialScale = _ref.initialScale,\n        transition = _ref.transition,\n        transitionEnd = _ref.transitionEnd,\n        delay = _ref.delay;\n    return _extends({\n      opacity: 0\n    }, reverse ? {\n      scale: initialScale,\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    } : {\n      transitionEnd: _extends({\n        scale: initialScale\n      }, transitionEnd == null ? void 0 : transitionEnd.exit)\n    }, {\n      transition: (_transition$exit = transition == null ? void 0 : transition.exit) != null ? _transition$exit : withDelay.exit(TransitionDefaults.exit, delay)\n    });\n  },\n  enter: function enter(_ref2) {\n    var _transition$enter;\n\n    var transitionEnd = _ref2.transitionEnd,\n        transition = _ref2.transition,\n        delay = _ref2.delay;\n    return {\n      opacity: 1,\n      scale: 1,\n      transition: (_transition$enter = transition == null ? void 0 : transition.enter) != null ? _transition$enter : withDelay.enter(TransitionDefaults.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  }\n};\nexport var scaleFadeConfig = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants\n};\nexport var ScaleFade = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var unmountOnExit = props.unmountOnExit,\n      isOpen = props.in,\n      _props$reverse = props.reverse,\n      reverse = _props$reverse === void 0 ? true : _props$reverse,\n      _props$initialScale = props.initialScale,\n      initialScale = _props$initialScale === void 0 ? 0.95 : _props$initialScale,\n      className = props.className,\n      transition = props.transition,\n      transitionEnd = props.transitionEnd,\n      delay = props.delay,\n      rest = _objectWithoutPropertiesLoose(props, [\"unmountOnExit\", \"in\", \"reverse\", \"initialScale\", \"className\", \"transition\", \"transitionEnd\", \"delay\"]);\n\n  var show = unmountOnExit ? isOpen && unmountOnExit : true;\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  var custom = {\n    initialScale: initialScale,\n    reverse: reverse,\n    transition: transition,\n    transitionEnd: transitionEnd,\n    delay: delay\n  };\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    custom: custom\n  }, show && /*#__PURE__*/React.createElement(motion.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-offset-slide\", className)\n  }, scaleFadeConfig, {\n    animate: animate,\n    custom: custom\n  }, rest)));\n});\n\nif (__DEV__) {\n  ScaleFade.displayName = \"ScaleFade\";\n}","map":{"version":3,"mappings":"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","names":["cx","__DEV__","AnimatePresence","motion","React","TransitionDefaults","withDelay","variants","exit","reverse","initialScale","transition","transitionEnd","delay","opacity","scale","enter","scaleFadeConfig","initial","animate","ScaleFade","forwardRef","props","ref","unmountOnExit","isOpen","in","className","rest","show","custom","div","displayName"],"sources":["../../src/scale-fade.tsx"],"sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  TransitionDefaults,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\ninterface ScaleFadeOptions {\n  /**\n   * The initial scale of the element\n   * @default 0.95\n   */\n  initialScale?: number\n  /**\n   * If `true`, the element will transition back to exit state\n   */\n  reverse?: boolean\n}\n\nconst variants: Variants<ScaleFadeOptions> = {\n  exit: ({ reverse, initialScale, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    ...(reverse\n      ? { scale: initialScale, transitionEnd: transitionEnd?.exit }\n      : { transitionEnd: { scale: initialScale, ...transitionEnd?.exit } }),\n    transition:\n      transition?.exit ?? withDelay.exit(TransitionDefaults.exit, delay),\n  }),\n  enter: ({ transitionEnd, transition, delay }) => ({\n    opacity: 1,\n    scale: 1,\n    transition:\n      transition?.enter ?? withDelay.enter(TransitionDefaults.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n}\n\nexport const scaleFadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport interface ScaleFadeProps\n  extends ScaleFadeOptions,\n    WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nexport const ScaleFade = React.forwardRef<HTMLDivElement, ScaleFadeProps>(\n  (props, ref) => {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      initialScale = 0.95,\n      className,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = { initialScale, reverse, transition, transitionEnd, delay }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-offset-slide\", className)}\n            {...scaleFadeConfig}\n            animate={animate}\n            custom={custom}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  ScaleFade.displayName = \"ScaleFade\"\n}\n"]},"metadata":{},"sourceType":"module"}