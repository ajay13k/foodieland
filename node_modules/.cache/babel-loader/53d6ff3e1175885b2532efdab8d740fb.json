{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport * as React from \"react\";\nimport { Modal, ModalContent } from \"./modal\";\nexport function AlertDialog(props) {\n  var leastDestructiveRef = props.leastDestructiveRef,\n      rest = _objectWithoutPropertiesLoose(props, [\"leastDestructiveRef\"]);\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({}, rest, {\n    initialFocusRef: leastDestructiveRef\n  }));\n}\nexport var AlertDialogContent = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(ModalContent, _extends({\n    ref: ref,\n    role: \"alertdialog\"\n  }, props));\n});\nexport { ModalBody as AlertDialogBody, ModalCloseButton as AlertDialogCloseButton, ModalFooter as AlertDialogFooter, ModalHeader as AlertDialogHeader, ModalOverlay as AlertDialogOverlay } from \"./modal\";","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAmE,SAAnE;AAMA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA8C;EAC7C,IAAEC,mBAAF,GAAmCD,KAAnC,CAAEC,mBAAF;EAAA,IAA0BC,IAA1B,GAANC,8BAAyCH,KAAzC,0BAAM;;EACN,oBAAOJ,oBAACC,KAAD,eAAWK,IAAX;IAAiBE,eAAe,EAAEH;EAAlC,GAAP;AACD;AAED,OAAO,IAAMI,kBAAkB,gBAAGV,UAAU,CAC1C,UAACK,KAAD,EAAQM,GAAR;EAAA,oBAAgBV,oBAACE,YAAD;IAAcQ,GAAG,EAAEA,GAAnB;IAAwBC,IAAI,EAAC;EAA7B,GAA+CP,KAA/C,EAAhB;AAAA,CAD0C,CAArC;AAIP,SACEQ,SAAS,IAAIC,eADf,EAEEC,gBAAgB,IAAIC,sBAFtB,EAGEC,WAAW,IAAIC,iBAHjB,EAIEC,WAAW,IAAIC,iBAJjB,EAKEC,YAAY,IAAIC,kBALlB,QAMO,SANP","names":["forwardRef","React","Modal","ModalContent","AlertDialog","props","leastDestructiveRef","rest","_objectWithoutPropertiesLoose","initialFocusRef","AlertDialogContent","ref","role","ModalBody","AlertDialogBody","ModalCloseButton","AlertDialogCloseButton","ModalFooter","AlertDialogFooter","ModalHeader","AlertDialogHeader","ModalOverlay","AlertDialogOverlay"],"sources":["../../src/alert-dialog.tsx"],"sourcesContent":["import { forwardRef } from \"@chakra-ui/system\"\nimport * as React from \"react\"\nimport { Modal, ModalContent, ModalContentProps, ModalProps } from \"./modal\"\n\nexport interface AlertDialogProps extends Omit<ModalProps, \"initialFocusRef\"> {\n  leastDestructiveRef: ModalProps[\"initialFocusRef\"]\n}\n\nexport function AlertDialog(props: AlertDialogProps) {\n  const { leastDestructiveRef, ...rest } = props\n  return <Modal {...rest} initialFocusRef={leastDestructiveRef} />\n}\n\nexport const AlertDialogContent = forwardRef<ModalContentProps, \"section\">(\n  (props, ref) => <ModalContent ref={ref} role=\"alertdialog\" {...props} />,\n)\n\nexport {\n  ModalBody as AlertDialogBody,\n  ModalCloseButton as AlertDialogCloseButton,\n  ModalFooter as AlertDialogFooter,\n  ModalHeader as AlertDialogHeader,\n  ModalOverlay as AlertDialogOverlay,\n} from \"./modal\"\n"]},"metadata":{},"sourceType":"module"}