{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { Icon } from \"./icon\";\nexport function createIcon(options) {\n  var _options$viewBox = options.viewBox,\n      viewBox = _options$viewBox === void 0 ? \"0 0 24 24\" : _options$viewBox,\n      pathDefinition = options.d,\n      path = options.path,\n      displayName = options.displayName,\n      _options$defaultProps = options.defaultProps,\n      defaultProps = _options$defaultProps === void 0 ? {} : _options$defaultProps;\n  var Comp = /*#__PURE__*/forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(Icon, _extends({\n      ref: ref,\n      viewBox: viewBox\n    }, defaultProps, props), path != null ? path : /*#__PURE__*/React.createElement(\"path\", {\n      fill: \"currentColor\",\n      d: pathDefinition\n    }));\n  });\n\n  if (__DEV__) {\n    Comp.displayName = displayName;\n  }\n\n  return Comp;\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAgC,QAAhC;AA2BA,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAAgD;EACrD,uBAMIA,OANJ,CACEC,OADF;EAAA,IACEA,OADF,iCACY,WADZ;EAAA,IAEKC,cAFL,GAMIF,OANJ,CAEEG,CAFF;EAAA,IAGEC,IAHF,GAMIJ,OANJ,CAGEI,IAHF;EAAA,IAIEC,WAJF,GAMIL,OANJ,CAIEK,WAJF;EAAA,4BAMIL,OANJ,CAKEM,YALF;EAAA,IAKEA,YALF,sCAKiB,EALjB;EAQA,IAAMC,IAAI,gBAAGZ,UAAU,CAAmB,UAACa,KAAD,EAAQC,GAAR;IAAA,oBACxCZ,oBAACC,IAAD;MAAMW,GAAG,EAAEA,GAAX;MAAgBR,OAAO,EAAEA;IAAzB,GAAsCK,YAAtC,EAAwDE,KAAxD,GACGJ,IADH,QACGA,UADH,aACWP;MAAMa,IAAI,EAAC,cAAX;MAA0BP,CAAC,EAAED;IAA7B,EADX,CADwC;EAAA,CAAnB,CAAvB;;EAMA,IAAIN,OAAJ,EAAa;IACXW,IAAI,CAACF,WAALE,GAAmBF,WAAnBE;EACD;;EAED,OAAOA,IAAP;AACD","names":["forwardRef","__DEV__","React","Icon","createIcon","options","viewBox","pathDefinition","d","path","displayName","defaultProps","Comp","props","ref","fill"],"sources":["../../src/create-icon.tsx"],"sourcesContent":["import { forwardRef } from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { Icon, IconProps } from \"./icon\"\n\ninterface CreateIconOptions {\n  /**\n   * The icon `svg` viewBox\n   * @default \"0 0 24 24\"\n   */\n  viewBox?: string\n  /**\n   * The `svg` path or group element\n   * @type React.ReactElement | React.ReactElement[]\n   */\n  path?: React.ReactElement | React.ReactElement[]\n  /**\n   * If the has a single path, simply copy the path's `d` attribute\n   */\n  d?: string\n  /**\n   * The display name useful in the dev tools\n   */\n  displayName?: string\n  /**\n   * Default props automatically passed to the component; overwriteable\n   */\n  defaultProps?: IconProps\n}\n\nexport function createIcon(options: CreateIconOptions) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    path,\n    displayName,\n    defaultProps = {},\n  } = options\n\n  const Comp = forwardRef<IconProps, \"svg\">((props, ref) => (\n    <Icon ref={ref} viewBox={viewBox} {...defaultProps} {...props}>\n      {path ?? <path fill=\"currentColor\" d={pathDefinition} />}\n    </Icon>\n  ))\n\n  if (__DEV__) {\n    Comp.displayName = displayName\n  }\n\n  return Comp\n}\n"]},"metadata":{},"sourceType":"module"}