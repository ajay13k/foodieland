{"ast":null,"code":"import _defineProperty2 from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { objectKeys } from \"@chakra-ui/utils\";\nimport { AnimatePresence } from \"framer-motion\";\nimport * as React from \"react\";\nimport { Toast } from \"./toast\";\nimport { findToast, getToastPosition } from \"./toast.utils\";\n/**\n * Manages the creation, and removal of toasts\n * across all corners (\"top\", \"bottom\", etc.)\n */\n\nexport var ToastManager = /*#__PURE__*/function (_React$Component) {\n  _inherits(ToastManager, _React$Component);\n\n  var _super = _createSuper(ToastManager);\n\n  /**\n   * Static id counter to create unique ids\n   * for each toast\n   */\n\n  /**\n   * State to track all the toast across all positions\n   */\n  function ToastManager(props) {\n    var _this2;\n\n    _classCallCheck(this, ToastManager);\n\n    var _this;\n\n    _this2 = _super.call(this, props);\n    _this = _assertThisInitialized(_this2);\n\n    _defineProperty(_assertThisInitialized(_this2), \"state\", {\n      top: [],\n      \"top-left\": [],\n      \"top-right\": [],\n      \"bottom-left\": [],\n      bottom: [],\n      \"bottom-right\": []\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"notify\", function (message, options) {\n      var toast = _this2.createToast(message, options);\n\n      var position = toast.position,\n          id = toast.id;\n\n      _this2.setState(function (prevToasts) {\n        var isTop = position.includes(\"top\");\n        /**\n         * - If the toast is positioned at the top edges, the\n         * recent toast stacks on top of the other toasts.\n         *\n         * - If the toast is positioned at the bottom edges, the recent\n         * toast stacks below the other toasts.\n         */\n\n        var toasts = isTop ? [toast].concat(_toConsumableArray(prevToasts[position])) : [].concat(_toConsumableArray(prevToasts[position]), [toast]);\n        return _extends({}, prevToasts, _defineProperty2({}, position, toasts));\n      });\n\n      return id;\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"updateToast\", function (id, options) {\n      _this2.setState(function (prevState) {\n        var nextState = _extends({}, prevState);\n\n        var _findToast = findToast(nextState, id),\n            position = _findToast.position,\n            index = _findToast.index;\n\n        if (position && index !== -1) {\n          nextState[position][index] = _extends({}, nextState[position][index], options);\n        }\n\n        return nextState;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"closeAll\", function (_temp) {\n      var _ref = _temp === void 0 ? {} : _temp,\n          positions = _ref.positions; // only one setState here for perf reasons\n      // instead of spamming this.closeToast\n\n\n      _this.setState(function (prev) {\n        var allPositions = [\"bottom\", \"bottom-right\", \"bottom-left\", \"top\", \"top-left\", \"top-right\"];\n        var positionsToClose = positions != null ? positions : allPositions;\n        return positionsToClose.reduce(function (acc, position) {\n          acc[position] = prev[position].map(function (toast) {\n            return _extends({}, toast, {\n              requestClose: true\n            });\n          });\n          return acc;\n        }, {});\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"createToast\", function (message, options) {\n      var _options$id, _options$position;\n\n      ToastManager.counter += 1;\n      var id = (_options$id = options.id) != null ? _options$id : ToastManager.counter;\n      var position = (_options$position = options.position) != null ? _options$position : \"top\";\n      return {\n        id: id,\n        message: message,\n        position: position,\n        duration: options.duration,\n        onCloseComplete: options.onCloseComplete,\n        onRequestRemove: function onRequestRemove() {\n          return _this2.removeToast(String(id), position);\n        },\n        status: options.status,\n        requestClose: false\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"closeToast\", function (id) {\n      _this2.setState(function (prevState) {\n        var position = getToastPosition(prevState, id);\n        if (!position) return prevState;\n        return _extends({}, prevState, _defineProperty2({}, position, prevState[position].map(function (toast) {\n          // id may be string or number\n          // eslint-disable-next-line eqeqeq\n          if (toast.id == id) {\n            return _extends({}, toast, {\n              requestClose: true\n            });\n          }\n\n          return toast;\n        })));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"removeToast\", function (id, position) {\n      _this2.setState(function (prevState) {\n        return _extends({}, prevState, _defineProperty2({}, position, prevState[position].filter(function (toast) {\n          return toast.id != id;\n        })));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"isVisible\", function (id) {\n      var _findToast2 = findToast(_this2.state, id),\n          position = _findToast2.position;\n\n      return Boolean(position);\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"getStyle\", function (position) {\n      var isTopOrBottom = position === \"top\" || position === \"bottom\";\n      var margin = isTopOrBottom ? \"0 auto\" : undefined;\n      var top = position.includes(\"top\") ? \"env(safe-area-inset-top, 0px)\" : undefined;\n      var bottom = position.includes(\"bottom\") ? \"env(safe-area-inset-bottom, 0px)\" : undefined;\n      var right = !position.includes(\"left\") ? \"env(safe-area-inset-right, 0px)\" : undefined;\n      var left = !position.includes(\"right\") ? \"env(safe-area-inset-left, 0px)\" : undefined;\n      return {\n        position: \"fixed\",\n        zIndex: 5500,\n        pointerEvents: \"none\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        margin: margin,\n        top: top,\n        bottom: bottom,\n        right: right,\n        left: left\n      };\n    });\n\n    var methods = {\n      notify: _this2.notify,\n      closeAll: _this2.closeAll,\n      close: _this2.closeToast,\n      update: _this2.updateToast,\n      isActive: _this2.isVisible\n    };\n    props.notify(methods);\n    return _this2;\n  }\n  /**\n   * Function to actually create a toast and add it\n   * to state at the specified position\n   */\n\n\n  _createClass(ToastManager, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return objectKeys(this.state).map(function (position) {\n        var toasts = _this3.state[position];\n        return /*#__PURE__*/React.createElement(\"ul\", {\n          key: position,\n          id: \"chakra-toast-manager-\" + position,\n          style: _this3.getStyle(position)\n        }, /*#__PURE__*/React.createElement(AnimatePresence, {\n          initial: false\n        }, toasts.map(function (toast) {\n          return /*#__PURE__*/React.createElement(Toast, _extends({\n            key: toast.id\n          }, toast));\n        })));\n      });\n    }\n  }]);\n\n  return ToastManager;\n}(React.Component);\n\n_defineProperty(ToastManager, \"counter\", 0);","map":{"version":3,"mappings":"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","names":["objectKeys","AnimatePresence","React","Toast","findToast","getToastPosition","ToastManager","constructor","props","_this","_defineProperty","top","bottom","message","options","toast","createToast","position","id","setState","prevToasts","isTop","includes","toasts","prevState","nextState","index","positions","prev","allPositions","positionsToClose","reduce","acc","map","requestClose","counter","duration","onCloseComplete","onRequestRemove","removeToast","String","status","filter","state","Boolean","isTopOrBottom","margin","undefined","right","left","zIndex","pointerEvents","display","flexDirection","methods","notify","closeAll","close","closeToast","update","updateToast","isActive","isVisible","render","key","style","getStyle","initial","Component"],"sources":["../../src/toast-manager.tsx"],"sourcesContent":["import { objectKeys } from \"@chakra-ui/utils\"\nimport { AnimatePresence } from \"framer-motion\"\nimport * as React from \"react\"\nimport { Toast } from \"./toast\"\nimport type {\n  CloseAllToastsOptions,\n  ToastId,\n  ToastMessage,\n  ToastOptions,\n  ToastPosition,\n} from \"./toast.types\"\nimport { findToast, getToastPosition } from \"./toast.utils\"\n\nexport interface ToastMethods {\n  notify: (message: ToastMessage, options: CreateToastOptions) => ToastId\n  closeAll: (options?: CloseAllToastsOptions) => void\n  close: (id: ToastId) => void\n  update: (id: ToastId, options: CreateToastOptions) => void\n  isActive: (id: ToastId) => boolean\n}\n\ninterface Props {\n  notify: (methods: ToastMethods) => void\n}\n\ntype State = { [K in ToastPosition]: ToastOptions[] }\n\ntype CreateToastOptions = Partial<\n  Pick<\n    ToastOptions,\n    \"status\" | \"duration\" | \"position\" | \"id\" | \"onCloseComplete\"\n  >\n>\n\n/**\n * Manages the creation, and removal of toasts\n * across all corners (\"top\", \"bottom\", etc.)\n */\nexport class ToastManager extends React.Component<Props, State> {\n  /**\n   * Static id counter to create unique ids\n   * for each toast\n   */\n  static counter = 0\n\n  /**\n   * State to track all the toast across all positions\n   */\n  state: State = {\n    top: [],\n    \"top-left\": [],\n    \"top-right\": [],\n    \"bottom-left\": [],\n    bottom: [],\n    \"bottom-right\": [],\n  }\n\n  constructor(props: Props) {\n    super(props)\n\n    const methods = {\n      notify: this.notify,\n      closeAll: this.closeAll,\n      close: this.closeToast,\n      update: this.updateToast,\n      isActive: this.isVisible,\n    }\n\n    props.notify(methods)\n  }\n\n  /**\n   * Function to actually create a toast and add it\n   * to state at the specified position\n   */\n  notify = (message: ToastMessage, options: CreateToastOptions) => {\n    const toast = this.createToast(message, options)\n    const { position, id } = toast\n\n    this.setState((prevToasts) => {\n      const isTop = position.includes(\"top\")\n\n      /**\n       * - If the toast is positioned at the top edges, the\n       * recent toast stacks on top of the other toasts.\n       *\n       * - If the toast is positioned at the bottom edges, the recent\n       * toast stacks below the other toasts.\n       */\n      const toasts = isTop\n        ? [toast, ...prevToasts[position]]\n        : [...prevToasts[position], toast]\n\n      return {\n        ...prevToasts,\n        [position]: toasts,\n      }\n    })\n\n    return id\n  }\n\n  /**\n   * Update a specific toast with new options based on the\n   * passed `id`\n   */\n  updateToast = (id: ToastId, options: CreateToastOptions) => {\n    this.setState((prevState) => {\n      const nextState = { ...prevState }\n      const { position, index } = findToast(nextState, id)\n\n      if (position && index !== -1) {\n        nextState[position][index] = {\n          ...nextState[position][index],\n          ...options,\n        }\n      }\n\n      return nextState\n    })\n  }\n\n  /**\n   * Close all toasts at once.\n   * If given positions, will only close those.\n   */\n  closeAll = ({ positions }: CloseAllToastsOptions = {}) => {\n    // only one setState here for perf reasons\n    // instead of spamming this.closeToast\n    this.setState((prev) => {\n      const allPositions: ToastPosition[] = [\n        \"bottom\",\n        \"bottom-right\",\n        \"bottom-left\",\n        \"top\",\n        \"top-left\",\n        \"top-right\",\n      ]\n\n      const positionsToClose = positions ?? allPositions\n\n      return positionsToClose.reduce((acc, position) => {\n        acc[position] = prev[position].map((toast) => ({\n          ...toast,\n          requestClose: true,\n        }))\n\n        return acc\n      }, {})\n    })\n  }\n\n  /**\n   * Create properties for a new toast\n   */\n  createToast = (message: ToastMessage, options: CreateToastOptions) => {\n    ToastManager.counter += 1\n    const id = options.id ?? ToastManager.counter\n\n    const position = options.position ?? \"top\"\n\n    return {\n      id,\n      message,\n      position,\n      duration: options.duration,\n      onCloseComplete: options.onCloseComplete,\n      onRequestRemove: () => this.removeToast(String(id), position),\n      status: options.status,\n      requestClose: false,\n    }\n  }\n\n  /**\n   * Requests to close a toast based on its id and position\n   */\n  closeToast = (id: ToastId) => {\n    this.setState((prevState) => {\n      const position = getToastPosition(prevState, id)\n\n      if (!position) return prevState\n\n      return {\n        ...prevState,\n        [position]: prevState[position].map((toast) => {\n          // id may be string or number\n          // eslint-disable-next-line eqeqeq\n          if (toast.id == id) {\n            return {\n              ...toast,\n              requestClose: true,\n            }\n          }\n\n          return toast\n        }),\n      }\n    })\n  }\n\n  /**\n   * Delete a toast record at its position\n   */\n  removeToast = (id: ToastId, position: ToastPosition) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      // id may be string or number\n      // eslint-disable-next-line eqeqeq\n      [position]: prevState[position].filter((toast) => toast.id != id),\n    }))\n  }\n\n  isVisible = (id: ToastId) => {\n    const { position } = findToast(this.state, id)\n    return Boolean(position)\n  }\n\n  /**\n   * Compute the style of a toast based on its position\n   */\n  getStyle = (position: ToastPosition): React.CSSProperties => {\n    const isTopOrBottom = position === \"top\" || position === \"bottom\"\n    const margin = isTopOrBottom ? \"0 auto\" : undefined\n\n    const top = position.includes(\"top\")\n      ? \"env(safe-area-inset-top, 0px)\"\n      : undefined\n    const bottom = position.includes(\"bottom\")\n      ? \"env(safe-area-inset-bottom, 0px)\"\n      : undefined\n    const right = !position.includes(\"left\")\n      ? \"env(safe-area-inset-right, 0px)\"\n      : undefined\n    const left = !position.includes(\"right\")\n      ? \"env(safe-area-inset-left, 0px)\"\n      : undefined\n\n    return {\n      position: \"fixed\",\n      zIndex: 5500,\n      pointerEvents: \"none\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      margin,\n      top,\n      bottom,\n      right,\n      left,\n    }\n  }\n\n  render() {\n    return objectKeys(this.state).map((position) => {\n      const toasts = this.state[position]\n      return (\n        <ul\n          key={position}\n          id={`chakra-toast-manager-${position}`}\n          style={this.getStyle(position)}\n        >\n          <AnimatePresence initial={false}>\n            {toasts.map((toast) => (\n              <Toast key={toast.id} {...toast} />\n            ))}\n          </AnimatePresence>\n        </ul>\n      )\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}