{"ast":null,"code":"import _createClass from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { isBrowser } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { ToastManager } from \"./toast-manager\";\nvar portalId = \"chakra-toast-portal\";\n\nvar Toaster = /*#__PURE__*/_createClass(\n/**\n * Initialize the manager and mount it in the DOM\n * inside the portal node.\n *\n * @todo\n *\n * Update toast constructor to use `PortalManager`'s node or document.body.\n * Once done, we can remove the `zIndex` in `toast.manager.tsx`\n */\nfunction Toaster() {\n  var _this2 = this;\n\n  _classCallCheck(this, Toaster);\n\n  var _this = this;\n\n  _defineProperty(this, \"createToast\", void 0);\n\n  _defineProperty(this, \"removeAll\", void 0);\n\n  _defineProperty(this, \"closeToast\", void 0);\n\n  _defineProperty(this, \"updateToast\", void 0);\n\n  _defineProperty(this, \"isToastActive\", void 0);\n\n  _defineProperty(this, \"bindFunctions\", function (methods) {\n    _this2.createToast = methods.notify;\n    _this2.removeAll = methods.closeAll;\n    _this2.closeToast = methods.close;\n    _this2.updateToast = methods.update;\n    _this2.isToastActive = methods.isActive;\n  });\n\n  _defineProperty(this, \"notify\", function (message, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _this.createToast == null ? void 0 : _this.createToast(message, options);\n  });\n\n  _defineProperty(this, \"close\", function (id) {\n    var _this$closeToast;\n\n    (_this$closeToast = _this2.closeToast) == null ? void 0 : _this$closeToast.call(_this2, id);\n  });\n\n  _defineProperty(this, \"closeAll\", function (options) {\n    var _this$removeAll;\n\n    (_this$removeAll = _this2.removeAll) == null ? void 0 : _this$removeAll.call(_this2, options);\n  });\n\n  _defineProperty(this, \"update\", function (id, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this.updateToast == null ? void 0 : _this.updateToast(id, options);\n  });\n\n  _defineProperty(this, \"isActive\", function (id) {\n    var _this$isToastActive;\n\n    return (_this$isToastActive = _this2.isToastActive) == null ? void 0 : _this$isToastActive.call(_this2, id);\n  });\n\n  if (!isBrowser) return;\n  var portal;\n  var existingPortal = document.getElementById(portalId);\n\n  if (existingPortal) {\n    portal = existingPortal;\n  } else {\n    var _document$body;\n\n    var div = document.createElement(\"div\");\n    div.id = portalId;\n    (_document$body = document.body) == null ? void 0 : _document$body.appendChild(div);\n    portal = div;\n  }\n\n  render( /*#__PURE__*/React.createElement(ToastManager, {\n    notify: this.bindFunctions\n  }), portal);\n});\n\nexport var toast = new Toaster();","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAAuBC,YAAvB,QAA2C,iBAA3C;AAQA,IAAMC,QAAQ,GAAG,qBAAjB;;IAEMC,O;AAOJ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,mBAAc;EAAA;;EAAA;;EAAA;;EAAAC;;EAAAA;;EAAAA;;EAAAA;;EAAAA;;EAAAA,uCAkBWC,iBAAD,EAA2B;IACjD,OAAKC,WAAL,GAAmBD,OAAO,CAACE,MAA3B;IACA,OAAKC,SAAL,GAAiBH,OAAO,CAACI,QAAzB;IACA,OAAKC,UAAL,GAAkBL,OAAO,CAACM,KAA1B;IACA,OAAKC,WAAL,GAAmBP,OAAO,CAACQ,MAA3B;IACA,OAAKC,aAAL,GAAqBT,OAAO,CAACU,QAA7B;EAvBY;;EAAAX,gCA0BL,UAACY,OAAD,EAAwBC,OAAxB;IAAA,IAAwBA,OAAxB;MAAwBA,OAAxB,GAAyD,EAAjCA;IAAxB;;IAAA,OACPC,KAAI,CAACZ,WAAL,IADO,IACP,GADO,MACP,QAAI,CAACA,WAAL,CAAmBU,OAAnB,EAA4BC,OAA5B,CADO;EA1BK;;EAAAb,+BA6BLe,YAAD,EAAiB;IAAA;;IACvB,2BAAKT,UAAL,mDAAkBS,EAAlB;EA9BY;;EAAAf,kCAiCFa,iBAAD,EAAqC;IAAA;;IAC9C,0BAAKT,SAAL,kDAAiBS,OAAjB;EAlCY;;EAAAb,gCAqCL,UAACe,EAAD,EAAcF,OAAd,EAAsD;IAAA,IAAxCA,OAAwC;MAAxCA,OAAwC,GAAP,EAAjCA;IAAwC;;IAC7DC,KAAI,CAACN,WAAL,yBAAI,CAACA,WAAL,CAAmBO,EAAnB,EAAuBF,OAAvB;EAtCY;;EAAAb,kCAyCFe,YAAD;IAAA;;IAAA,8BAAiB,OAAKL,aAAtB,qBAAiBM,iCAAqBD,EAArB,CAAjB;EAzCG;;EACZ,IAAI,CAACtB,SAAL,EAAgB;EAEhB,IAAIwB,MAAJ;EACA,IAAMC,cAAc,GAAGC,QAAQ,CAACC,cAATD,CAAwBtB,QAAxBsB,CAAvB;;EAEA,IAAID,cAAJ,EAAoB;IAClBD,MAAM,GAAGC,cAATD;EADF,OAEO;IAAA;;IACL,IAAMI,GAAG,GAAGF,QAAQ,CAACG,aAATH,CAAuB,KAAvBA,CAAZ;IACAE,GAAG,CAACN,EAAJM,GAASxB,QAATwB;IACA,0BAAQ,CAACE,IAAT,oCAAeC,WAAf,CAA2BH,GAA3B;IACAJ,MAAM,GAAGI,GAATJ;EACD;;EAEDtB,MAAM,eAACD,oBAACE,YAAD;IAAcO,MAAM,EAAE,KAAKsB;EAA3B,EAAD,EAA+CR,MAA/C,CAANtB;AACD,C;;AA4BH,OAAO,IAAM+B,KAAK,GAAG,IAAI5B,OAAJ,EAAd","names":["isBrowser","React","render","ToastManager","portalId","Toaster","constructor","_defineProperty","methods","createToast","notify","removeAll","closeAll","closeToast","close","updateToast","update","isToastActive","isActive","message","options","_this","id","_this$isToastActive","portal","existingPortal","document","getElementById","div","createElement","body","appendChild","bindFunctions","toast"],"sources":["../../src/toast.class.tsx"],"sourcesContent":["import { isBrowser } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { render } from \"react-dom\"\nimport { ToastMethods, ToastManager } from \"./toast-manager\"\nimport type {\n  CloseAllToastsOptions,\n  ToastId,\n  ToastMessage,\n  ToastOptions,\n} from \"./toast.types\"\n\nconst portalId = \"chakra-toast-portal\"\n\nclass Toaster {\n  private createToast?: ToastMethods[\"notify\"]\n  private removeAll?: ToastMethods[\"closeAll\"]\n  private closeToast?: ToastMethods[\"close\"]\n  private updateToast?: ToastMethods[\"update\"]\n  private isToastActive?: ToastMethods[\"isActive\"]\n\n  /**\n   * Initialize the manager and mount it in the DOM\n   * inside the portal node.\n   *\n   * @todo\n   *\n   * Update toast constructor to use `PortalManager`'s node or document.body.\n   * Once done, we can remove the `zIndex` in `toast.manager.tsx`\n   */\n  constructor() {\n    if (!isBrowser) return\n\n    let portal: HTMLElement\n    const existingPortal = document.getElementById(portalId)\n\n    if (existingPortal) {\n      portal = existingPortal\n    } else {\n      const div = document.createElement(\"div\")\n      div.id = portalId\n      document.body?.appendChild(div)\n      portal = div\n    }\n\n    render(<ToastManager notify={this.bindFunctions} />, portal)\n  }\n\n  private bindFunctions = (methods: ToastMethods) => {\n    this.createToast = methods.notify\n    this.removeAll = methods.closeAll\n    this.closeToast = methods.close\n    this.updateToast = methods.update\n    this.isToastActive = methods.isActive\n  }\n\n  notify = (message: ToastMessage, options: Partial<ToastOptions> = {}) =>\n    this.createToast?.(message, options)\n\n  close = (id: ToastId) => {\n    this.closeToast?.(id)\n  }\n\n  closeAll = (options?: CloseAllToastsOptions) => {\n    this.removeAll?.(options)\n  }\n\n  update = (id: ToastId, options: Partial<ToastOptions> = {}) => {\n    this.updateToast?.(id, options)\n  }\n\n  isActive = (id: ToastId) => this.isToastActive?.(id)\n}\n\nexport const toast = new Toaster()\n"]},"metadata":{},"sourceType":"module"}