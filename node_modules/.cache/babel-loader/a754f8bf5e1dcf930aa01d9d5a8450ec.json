{"ast":null,"code":"import { pipe } from \"@chakra-ui/utils\";\nimport { mergeThemeOverride } from \"../extend-theme\";\nimport { withDefaultColorScheme } from \"./with-default-color-scheme\";\nimport { withDefaultVariant } from \"./with-default-variant\";\nimport { withDefaultSize } from \"./with-default-size\";\nexport function withDefaultProps(_ref) {\n  var _ref$defaultProps = _ref.defaultProps,\n      colorScheme = _ref$defaultProps.colorScheme,\n      variant = _ref$defaultProps.variant,\n      size = _ref$defaultProps.size,\n      components = _ref.components;\n\n  var identity = function identity(t) {\n    return t;\n  };\n\n  var fns = [colorScheme ? withDefaultColorScheme({\n    colorScheme: colorScheme,\n    components: components\n  }) : identity, size ? withDefaultSize({\n    size: size,\n    components: components\n  }) : identity, variant ? withDefaultVariant({\n    variant: variant,\n    components: components\n  }) : identity];\n  return function (theme) {\n    return mergeThemeOverride(pipe.apply(void 0, fns)(theme));\n  };\n}","map":{"version":3,"mappings":"AACA,SAAeA,IAAf,QAA2B,kBAA3B;AACA,SAASC,kBAAT,QAAkD,iBAAlD;AACA,SAASC,sBAAT,QAAuC,6BAAvC;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AAEA,OAAO,SAASC,gBAAT,OASJ;EAAA,6BALDC,YAKC;EAAA,IALeC,WAKf,qBALeA,WAKf;EAAA,IAL4BC,OAK5B,qBAL4BA,OAK5B;EAAA,IALqCC,IAKrC,qBALqCA,IAKrC;EAAA,IAJDC,UAIC,QAJDA,UAIC;;EACD,IAAMC,QAAQ,GAAOC,SAAfD,QAAeC,EAAJ;IAAA,OAAaA,CAAb;EAAA,CAAjB;;EACA,IAAMC,GAAG,GAAG,CACVN,WAAW,GACPL,sBAAsB,CAAC;IAAEK,WAAF,EAAEA,WAAF;IAAeG;EAAf,CAAD,CADf,GAEPC,QAHM,EAIVF,IAAI,GAAGL,eAAe,CAAC;IAAEK,IAAF,EAAEA,IAAF;IAAQC;EAAR,CAAD,CAAlB,GAA2CC,QAJrC,EAKVH,OAAO,GAAGL,kBAAkB,CAAC;IAAEK,OAAF,EAAEA,OAAF;IAAWE;EAAX,CAAD,CAArB,GAAiDC,QAL9C,CAAZ;EAQA,OAAQG,eAAD;IAAA,OAAqBb,kBAAkB,CAAYD,IAAI,MAAJA,SAAQa,GAARb,EAAac,KAAbd,CAAZ,CAAvC;EAAA,CAAP;AACD","names":["pipe","mergeThemeOverride","withDefaultColorScheme","withDefaultVariant","withDefaultSize","withDefaultProps","defaultProps","colorScheme","variant","size","components","identity","t","fns","theme"],"sources":["../../../src/theme-extensions/with-default-props.ts"],"sourcesContent":["import { ChakraTheme, ComponentDefaultProps } from \"@chakra-ui/theme\"\nimport { Dict, pipe } from \"@chakra-ui/utils\"\nimport { mergeThemeOverride, ThemeOverride } from \"../extend-theme\"\nimport { withDefaultColorScheme } from \"./with-default-color-scheme\"\nimport { withDefaultVariant } from \"./with-default-variant\"\nimport { withDefaultSize } from \"./with-default-size\"\n\nexport function withDefaultProps<\n  BaseTheme extends ChakraTheme,\n  Override extends ThemeOverride<BaseTheme>\n>({\n  defaultProps: { colorScheme, variant, size },\n  components,\n}: {\n  defaultProps: ComponentDefaultProps\n  components?: string[] | Dict\n}) {\n  const identity = <T>(t: T) => t\n  const fns = [\n    colorScheme\n      ? withDefaultColorScheme({ colorScheme, components })\n      : identity,\n    size ? withDefaultSize({ size, components }) : identity,\n    variant ? withDefaultVariant({ variant, components }) : identity,\n  ]\n\n  return (theme: Override) => mergeThemeOverride<BaseTheme>(pipe(...fns)(theme))\n}\n"]},"metadata":{},"sourceType":"module"}