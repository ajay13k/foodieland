{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { getValidChildren } from \"@chakra-ui/react-utils\";\nimport * as React from \"react\";\nimport { PinInputDescendantsProvider, PinInputProvider, usePinInput, usePinInputField } from \"./use-pin-input\";\nexport var PinInput = function PinInput(props) {\n  var styles = useStyleConfig(\"PinInput\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      children = _omitThemingProps.children,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"children\"]);\n\n  var _usePinInput = usePinInput(rest),\n      descendants = _usePinInput.descendants,\n      context = _objectWithoutPropertiesLoose(_usePinInput, [\"descendants\"]);\n\n  var clones = getValidChildren(children).map(function (child) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      __css: styles\n    });\n  });\n  return /*#__PURE__*/React.createElement(PinInputDescendantsProvider, {\n    value: descendants\n  }, /*#__PURE__*/React.createElement(PinInputProvider, {\n    value: context\n  }, clones));\n};\n\nif (__DEV__) {\n  PinInput.displayName = \"PinInput\";\n}\n\nexport var PinInputField = /*#__PURE__*/forwardRef(function (props, ref) {\n  var inputProps = usePinInputField(props, ref);\n  return /*#__PURE__*/React.createElement(chakra.input, _extends({}, inputProps, {\n    className: cx(\"chakra-pin-input\", props.className)\n  }));\n});\n\nif (__DEV__) {\n  PinInputField.displayName = \"PinInputField\";\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SACEA,MADF,EAEEC,UAFF,EAGEC,gBAHF,EAKEC,cALF,QAOO,mBAPP;AAQA,SAASC,EAAT,EAAaC,OAAb,QAA4B,kBAA5B;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SACEC,2BADF,EAEEC,gBAFF,EAGEC,WAHF,EAIEC,gBAJF,QAMO,iBANP;AAiCA,OAAO,IAAMC,QAAiC,GAAIC,SAArCD,QAAqCC,MAAD,EAAW;EAC1D,IAAMC,MAAM,GAAGX,cAAc,CAAC,UAAD,EAAaU,KAAb,CAA7B;;EAEA,wBAA8BX,gBAAgB,CAACW,KAAD,CAA9C;EAAA,IAAQE,QAAR,qBAAQA,QAAR;EAAA,IAAqBC,IAArB;;EACA,mBAAoCN,WAAW,CAACM,IAAD,CAA/C;EAAA,IAAQC,WAAR,gBAAQA,WAAR;EAAA,IAAwBC,OAAxB;;EAEA,IAAMC,MAAM,GAAGb,gBAAgB,CAACS,QAAD,CAAhBT,CAA2Bc,GAA3Bd,CAAgCe,eAAD;IAAA,oBAC5Cd,KAAK,CAACe,YAANf,CAAmBc,KAAnBd,EAA0B;MAAEgB,KAAK,EAAET;IAAT,CAA1BP,CAD4C;EAAA,CAA/BD,CAAf;EAIA,oBACEC,oBAACC,2BAAD;IAA6BgB,KAAK,EAAEP;EAApC,gBACEV,oBAACE,gBAAD;IAAkBe,KAAK,EAAEN;EAAzB,GAAmCC,MAAnC,CADF,CADF;AAVK;;AAiBP,IAAId,OAAJ,EAAa;EACXO,QAAQ,CAACa,WAATb,GAAuB,UAAvBA;AACD;;AAID,OAAO,IAAMc,aAAa,gBAAGzB,UAAU,CACrC,UAACY,KAAD,EAAQc,GAAR,EAAgB;EACd,IAAMC,UAAU,GAAGjB,gBAAgB,CAACE,KAAD,EAAQc,GAAR,CAAnC;EACA,oBACEpB,oBAACP,MAAD,CAAQ6B,KAAR,eACMD,UADN;IAEEE,SAAS,EAAE1B,EAAE,CAAC,kBAAD,EAAqBS,KAAK,CAACiB,SAA3B;EAFf,GADF;AAHmC,EAAhC;;AAYP,IAAIzB,OAAJ,EAAa;EACXqB,aAAa,CAACD,WAAdC,GAA4B,eAA5BA;AACD","names":["chakra","forwardRef","omitThemingProps","useStyleConfig","cx","__DEV__","getValidChildren","React","PinInputDescendantsProvider","PinInputProvider","usePinInput","usePinInputField","PinInput","props","styles","children","rest","descendants","context","clones","map","child","cloneElement","__css","value","displayName","PinInputField","ref","inputProps","input","className"],"sources":["../../src/pin-input.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport { getValidChildren } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\nimport {\n  PinInputDescendantsProvider,\n  PinInputProvider,\n  usePinInput,\n  usePinInputField,\n  UsePinInputProps,\n} from \"./use-pin-input\"\n\ninterface InputOptions {\n  /**\n   * The border color when the input is focused. Use color keys in `theme.colors`\n   * @example\n   * focusBorderColor = \"blue.500\"\n   */\n  focusBorderColor?: string\n  /**\n   * The border color when the input is invalid. Use color keys in `theme.colors`\n   * @example\n   * errorBorderColor = \"red.500\"\n   */\n  errorBorderColor?: string\n}\n\nexport interface PinInputProps\n  extends UsePinInputProps,\n    ThemingProps<\"PinInput\">,\n    InputOptions {\n  /**\n   * The children of the pin input component\n   */\n  children: React.ReactNode\n}\n\nexport const PinInput: React.FC<PinInputProps> = (props) => {\n  const styles = useStyleConfig(\"PinInput\", props)\n\n  const { children, ...rest } = omitThemingProps(props)\n  const { descendants, ...context } = usePinInput(rest)\n\n  const clones = getValidChildren(children).map((child) =>\n    React.cloneElement(child, { __css: styles }),\n  )\n\n  return (\n    <PinInputDescendantsProvider value={descendants}>\n      <PinInputProvider value={context}>{clones}</PinInputProvider>\n    </PinInputDescendantsProvider>\n  )\n}\n\nif (__DEV__) {\n  PinInput.displayName = \"PinInput\"\n}\n\nexport interface PinInputFieldProps extends HTMLChakraProps<\"input\"> {}\n\nexport const PinInputField = forwardRef<PinInputFieldProps, \"input\">(\n  (props, ref) => {\n    const inputProps = usePinInputField(props, ref)\n    return (\n      <chakra.input\n        {...inputProps}\n        className={cx(\"chakra-pin-input\", props.className)}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  PinInputField.displayName = \"PinInputField\"\n}\n"]},"metadata":{},"sourceType":"module"}