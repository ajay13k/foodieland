{"ast":null,"code":"import _slicedToArray from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { isArray, isObject } from \"@chakra-ui/utils\";\nexport function walkObject(target, predicate) {\n  function inner(value, path) {\n    if (path === void 0) {\n      path = [];\n    }\n\n    if (isArray(value)) {\n      return value.map(function (item, index) {\n        return inner(item, [].concat(_toConsumableArray(path), [String(index)]));\n      });\n    }\n\n    if (isObject(value)) {\n      return Object.fromEntries(Object.entries(value).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            child = _ref2[1];\n\n        return [key, inner(child, [].concat(_toConsumableArray(path), [key]))];\n      }));\n    }\n\n    return predicate(value, path);\n  }\n\n  return inner(target);\n}","map":{"version":3,"mappings":";;AAAA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,kBAAlC;AAeA,OAAO,SAASC,UAAT,CACLC,MADK,EAELC,SAFK,EAGkE;EACvE,SAASC,KAAT,CAAeC,KAAf,EAA+BC,IAA/B,EAAyD;IAAA,IAA1BA,IAA0B;MAA1BA,IAA0B,GAAT,EAAjBA;IAA0B;;IACvD,IAAIP,OAAO,CAACM,KAAD,CAAX,EAAoB;MAClB,OAAOA,KAAK,CAACE,GAANF,CAAU,UAACG,IAAD,EAAOC,KAAP;QAAA,OAAiBL,KAAK,CAACI,IAAD,+BAAWF,IAAX,IAAiBI,MAAM,CAACD,KAAD,CAAvB,GAAtB;MAAA,CAAVJ,CAAP;IACD;;IAED,IAAIL,QAAQ,CAACK,KAAD,CAAZ,EAAqB;MACnB,OAAOM,MAAM,CAACC,WAAPD,CACLA,MAAM,CAACE,OAAPF,CAAeN,KAAfM,EAAsBJ,GAAtBI,CAA0B;QAAA;QAAA,IAAEG,GAAF;QAAA,IAAOC,KAAP;;QAAA,OAAkB,CAC1CD,GAD0C,EAE1CV,KAAK,CAACW,KAAD,+BAAYT,IAAZ,IAAkBQ,GAAlB,GAFqC,CAAlB;MAA1B,EADKH,CAAP;IAMD;;IAED,OAAOR,SAAS,CAACE,KAAD,EAAQC,IAAR,CAAhB;EACD;;EAED,OAAOF,KAAK,CAACF,MAAD,CAAZ;AACD","names":["isArray","isObject","walkObject","target","predicate","inner","value","path","map","item","index","String","Object","fromEntries","entries","key","child"],"sources":["../../src/walk-object.ts"],"sourcesContent":["import { isArray, isObject } from \"@chakra-ui/utils\"\n\nexport type WalkObjectPredicate<Leaf = unknown> = (\n  value: unknown,\n  path: string[],\n) => Leaf\n\nexport type MappedLeavesObject<Obj, LeafType> = {\n  [Prop in keyof Obj]: Obj[Prop] extends Array<any>\n    ? MappedLeavesObject<Obj[Prop][number], LeafType>[]\n    : Obj[Prop] extends object\n    ? MappedLeavesObject<Obj[Prop], LeafType>\n    : LeafType\n}\n\nexport function walkObject<Target, LeafType>(\n  target: Target,\n  predicate: WalkObjectPredicate<LeafType>,\n): MappedLeavesObject<Target, ReturnType<WalkObjectPredicate<LeafType>>> {\n  function inner(value: unknown, path: string[] = []): any {\n    if (isArray(value)) {\n      return value.map((item, index) => inner(item, [...path, String(index)]))\n    }\n\n    if (isObject(value)) {\n      return Object.fromEntries(\n        Object.entries(value).map(([key, child]) => [\n          key,\n          inner(child, [...path, key]),\n        ]),\n      )\n    }\n\n    return predicate(value, path)\n  }\n\n  return inner(target)\n}\n"]},"metadata":{},"sourceType":"module"}