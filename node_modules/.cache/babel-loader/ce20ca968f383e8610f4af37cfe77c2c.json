{"ast":null,"code":"import _defineProperty from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, useStyles } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nvar StyledElement = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 2\n  }\n});\nvar InputElement = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _elementStyles;\n\n  var _input$height, _input$height2;\n\n  var _props$placement = props.placement,\n      placement = _props$placement === void 0 ? \"left\" : _props$placement,\n      rest = _objectWithoutPropertiesLoose(props, [\"placement\"]);\n\n  var styles = useStyles();\n  var input = styles.field;\n  var attr = placement === \"left\" ? \"insetStart\" : \"insetEnd\";\n  var elementStyles = (_elementStyles = {}, _defineProperty(_elementStyles, attr, \"0\"), _defineProperty(_elementStyles, \"width\", (_input$height = input == null ? void 0 : input.height) != null ? _input$height : input == null ? void 0 : input.h), _defineProperty(_elementStyles, \"height\", (_input$height2 = input == null ? void 0 : input.height) != null ? _input$height2 : input == null ? void 0 : input.h), _defineProperty(_elementStyles, \"fontSize\", input == null ? void 0 : input.fontSize), _elementStyles);\n  return /*#__PURE__*/React.createElement(StyledElement, _extends({\n    ref: ref,\n    __css: elementStyles\n  }, rest));\n}); // This is used in `input-group.tsx`\n\nInputElement.id = \"InputElement\";\n\nif (__DEV__) {\n  InputElement.displayName = \"InputElement\";\n}\n\nexport var InputLeftElement = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, [\"className\"]);\n\n  var _className = cx(\"chakra-input__left-element\", className);\n\n  return /*#__PURE__*/React.createElement(InputElement, _extends({\n    ref: ref,\n    placement: \"left\",\n    className: _className\n  }, rest));\n}); // This is used in `input-group.tsx`\n\nInputLeftElement.id = \"InputLeftElement\";\n\nif (__DEV__) {\n  InputLeftElement.displayName = \"InputLeftElement\";\n}\n\nexport var InputRightElement = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, [\"className\"]);\n\n  var _className = cx(\"chakra-input__right-element\", className);\n\n  return /*#__PURE__*/React.createElement(InputElement, _extends({\n    ref: ref,\n    placement: \"right\",\n    className: _className\n  }, rest));\n}); // This is used in `input-group.tsx`\n\nInputRightElement.id = \"InputRightElement\";\n\nif (__DEV__) {\n  InputRightElement.displayName = \"InputRightElement\";\n}","map":{"version":3,"mappings":"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","names":["chakra","forwardRef","useStyles","cx","__DEV__","React","StyledElement","baseStyle","display","alignItems","justifyContent","position","top","zIndex","InputElement","props","ref","placement","rest","styles","input","field","attr","elementStyles","height","h","fontSize","__css","id","displayName","InputLeftElement","className","_objectWithoutPropertiesLoose","_className","InputRightElement"],"sources":["../../src/input-element.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  SystemStyleObject,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface InputElementProps extends HTMLChakraProps<\"div\"> {\n  placement?: \"left\" | \"right\"\n}\n\nconst StyledElement = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 2,\n  },\n})\n\nconst InputElement = forwardRef<InputElementProps, \"div\">((props, ref) => {\n  const { placement = \"left\", ...rest } = props\n\n  const styles = useStyles()\n  const input: any = styles.field\n\n  const attr = placement === \"left\" ? \"insetStart\" : \"insetEnd\"\n\n  const elementStyles: SystemStyleObject = {\n    [attr]: \"0\",\n    width: input?.height ?? input?.h,\n    height: input?.height ?? input?.h,\n    fontSize: input?.fontSize,\n  }\n\n  return <StyledElement ref={ref} __css={elementStyles} {...rest} />\n})\n\n// This is used in `input-group.tsx`\nInputElement.id = \"InputElement\"\n\nif (__DEV__) {\n  InputElement.displayName = \"InputElement\"\n}\n\nexport const InputLeftElement = forwardRef<InputElementProps, \"div\">(\n  (props, ref) => {\n    const { className, ...rest } = props\n    const _className = cx(\"chakra-input__left-element\", className)\n\n    return (\n      <InputElement\n        ref={ref}\n        placement=\"left\"\n        className={_className}\n        {...rest}\n      />\n    )\n  },\n)\n\n// This is used in `input-group.tsx`\nInputLeftElement.id = \"InputLeftElement\"\n\nif (__DEV__) {\n  InputLeftElement.displayName = \"InputLeftElement\"\n}\n\nexport const InputRightElement = forwardRef<InputElementProps, \"div\">(\n  (props, ref) => {\n    const { className, ...rest } = props\n    const _className = cx(\"chakra-input__right-element\", className)\n\n    return (\n      <InputElement\n        ref={ref}\n        placement=\"right\"\n        className={_className}\n        {...rest}\n      />\n    )\n  },\n)\n\n// This is used in `input-group.tsx`\nInputRightElement.id = \"InputRightElement\"\n\nif (__DEV__) {\n  InputRightElement.displayName = \"InputRightElement\"\n}\n"]},"metadata":{},"sourceType":"module"}