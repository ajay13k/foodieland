{"ast":null,"code":"import _toConsumableArray from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from \"react\";\n/**\n * Checks if the key pressed is a printable character\n * and can be used for shortcut navigation\n */\n\nfunction isPrintableCharacter(event) {\n  var key = event.key;\n  return key.length === 1 || key.length > 1 && /[^a-zA-Z0-9]/.test(key);\n}\n/**\n * React hook that provides an enhanced keydown handler,\n * that's used for key navigation within menus, select dropdowns.\n */\n\n\nexport function useShortcut(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      _props$timeout = _props.timeout,\n      timeout = _props$timeout === void 0 ? 300 : _props$timeout,\n      _props$preventDefault = _props.preventDefault,\n      preventDefault = _props$preventDefault === void 0 ? function () {\n    return true;\n  } : _props$preventDefault;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      keys = _React$useState2[0],\n      setKeys = _React$useState2[1];\n\n  var timeoutRef = React.useRef();\n\n  var flush = function flush() {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  };\n\n  var clearKeysAfterDelay = function clearKeysAfterDelay() {\n    flush();\n    timeoutRef.current = setTimeout(function () {\n      setKeys([]);\n      timeoutRef.current = null;\n    }, timeout);\n  };\n\n  React.useEffect(function () {\n    return flush;\n  }, []);\n\n  function onKeyDown(fn) {\n    return function (event) {\n      if (event.key === \"Backspace\") {\n        var keysCopy = _toConsumableArray(keys);\n\n        keysCopy.pop();\n        setKeys(keysCopy);\n        return;\n      }\n\n      if (isPrintableCharacter(event)) {\n        var _keysCopy = keys.concat(event.key);\n\n        if (preventDefault(event)) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        setKeys(_keysCopy);\n        fn(_keysCopy.join(\"\"));\n        clearKeysAfterDelay();\n      }\n    };\n  }\n\n  return onKeyDown;\n}","map":{"version":3,"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA;AACA;AACA;AACA;;AACA,SAASC,oBAAT,CAA8BC,KAA9B,EAA0D;EACxD,IAAQC,GAAR,GAAgBD,KAAhB,CAAQC,GAAR;EACA,OAAOA,GAAG,CAACC,MAAJD,KAAe,CAAfA,IAAqBA,GAAG,CAACC,MAAJD,GAAa,CAAbA,IAAkB,eAAeE,IAAf,CAAoBF,GAApB,CAA9C;AACD;AAOD;AACA;AACA;AACA;;;AACA,OAAO,SAASG,WAAT,CAAqBC,KAArB,EAAmD;EAAA,IAA9BA,KAA8B;IAA9BA,KAA8B,GAAJ,EAA1BA;EAA8B;;EACxD,aAAuDA,KAAvD;EAAA,4BAAQC,OAAR;EAAA,IAAQA,OAAR,+BAAkB,GAAlB;EAAA,mCAAuBC,cAAvB;EAAA,IAAuBA,cAAvB,sCAAwC;IAAA,OAAM,IAAN;EAAA,CAAxC;;EAEA,sBAAwBT,KAAK,CAACU,QAANV,CAAyB,EAAzBA,CAAxB;EAAA;EAAA,IAAOW,IAAP;EAAA,IAAaC,OAAb;;EACA,IAAMC,UAAU,GAAGb,KAAK,CAACc,MAANd,EAAnB;;EAEA,IAAMe,KAAK,GAAG,SAARA,KAAQ,GAAM;IAClB,IAAIF,UAAU,CAACG,OAAf,EAAwB;MACtBC,YAAY,CAACJ,UAAU,CAACG,OAAZ,CAAZC;MACAJ,UAAU,CAACG,OAAXH,GAAqB,IAArBA;IACD;EAJH;;EAOA,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;IAChCH,KAAK;IACLF,UAAU,CAACG,OAAXH,GAAqBM,UAAU,CAAC,YAAM;MACpCP,OAAO,CAAC,EAAD,CAAPA;MACAC,UAAU,CAACG,OAAXH,GAAqB,IAArBA;IAF6B,GAG5BL,OAH4B,CAA/BK;EAFF;;EAQAb,KAAK,CAACoB,SAANpB,CAAgB;IAAA,OAAMe,KAAN;EAAA,CAAhBf,EAA6B,EAA7BA;;EAIA,SAASqB,SAAT,CAAmBC,EAAnB,EAAiC;IAC/B,OAAQpB,eAAD,EAAgC;MACrC,IAAIA,KAAK,CAACC,GAAND,KAAc,WAAlB,EAA+B;QAC7B,IAAMqB,QAAQ,sBAAOZ,IAAP,CAAd;;QACAY,QAAQ,CAACC,GAATD;QACAX,OAAO,CAACW,QAAD,CAAPX;QACA;MACD;;MAED,IAAIX,oBAAoB,CAACC,KAAD,CAAxB,EAAiC;QAC/B,IAAMqB,SAAQ,GAAGZ,IAAI,CAACc,MAALd,CAAYT,KAAK,CAACC,GAAlBQ,CAAjB;;QAEA,IAAIF,cAAc,CAACP,KAAD,CAAlB,EAA2B;UACzBA,KAAK,CAACO,cAANP;UACAA,KAAK,CAACwB,eAANxB;QACD;;QAEDU,OAAO,CAACW,SAAD,CAAPX;QACAU,EAAE,CAACC,SAAQ,CAACI,IAATJ,CAAc,EAAdA,CAAD,CAAFD;QAEAJ,mBAAmB;MACpB;IApBH;EAsBD;;EAED,OAAOG,SAAP;AACD","names":["React","isPrintableCharacter","event","key","length","test","useShortcut","props","timeout","preventDefault","useState","keys","setKeys","timeoutRef","useRef","flush","current","clearTimeout","clearKeysAfterDelay","setTimeout","useEffect","onKeyDown","fn","keysCopy","pop","concat","stopPropagation","join"],"sources":["../../src/use-shortcut.ts"],"sourcesContent":["import * as React from \"react\"\n\n/**\n * Checks if the key pressed is a printable character\n * and can be used for shortcut navigation\n */\nfunction isPrintableCharacter(event: React.KeyboardEvent) {\n  const { key } = event\n  return key.length === 1 || (key.length > 1 && /[^a-zA-Z0-9]/.test(key))\n}\n\nexport interface UseShortcutProps {\n  timeout?: number\n  preventDefault?: (event: React.KeyboardEvent) => boolean\n}\n\n/**\n * React hook that provides an enhanced keydown handler,\n * that's used for key navigation within menus, select dropdowns.\n */\nexport function useShortcut(props: UseShortcutProps = {}) {\n  const { timeout = 300, preventDefault = () => true } = props\n\n  const [keys, setKeys] = React.useState<string[]>([])\n  const timeoutRef = React.useRef<any>()\n\n  const flush = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current)\n      timeoutRef.current = null\n    }\n  }\n\n  const clearKeysAfterDelay = () => {\n    flush()\n    timeoutRef.current = setTimeout(() => {\n      setKeys([])\n      timeoutRef.current = null\n    }, timeout)\n  }\n\n  React.useEffect(() => flush, [])\n\n  type Callback = (keysSoFar: string) => void\n\n  function onKeyDown(fn: Callback) {\n    return (event: React.KeyboardEvent) => {\n      if (event.key === \"Backspace\") {\n        const keysCopy = [...keys]\n        keysCopy.pop()\n        setKeys(keysCopy)\n        return\n      }\n\n      if (isPrintableCharacter(event)) {\n        const keysCopy = keys.concat(event.key)\n\n        if (preventDefault(event)) {\n          event.preventDefault()\n          event.stopPropagation()\n        }\n\n        setKeys(keysCopy)\n        fn(keysCopy.join(\"\"))\n\n        clearKeysAfterDelay()\n      }\n    }\n  }\n\n  return onKeyDown\n}\n"]},"metadata":{},"sourceType":"module"}