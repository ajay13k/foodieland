{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { TransitionDefaults, withDelay } from \"./transition-utils\";\nvar variants = {\n  initial: function initial(_ref) {\n    var _transition$exit;\n\n    var offsetX = _ref.offsetX,\n        offsetY = _ref.offsetY,\n        transition = _ref.transition,\n        transitionEnd = _ref.transitionEnd,\n        delay = _ref.delay;\n    return {\n      opacity: 0,\n      x: offsetX,\n      y: offsetY,\n      transition: (_transition$exit = transition == null ? void 0 : transition.exit) != null ? _transition$exit : withDelay.exit(TransitionDefaults.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    };\n  },\n  enter: function enter(_ref2) {\n    var _transition$enter;\n\n    var transition = _ref2.transition,\n        transitionEnd = _ref2.transitionEnd,\n        delay = _ref2.delay;\n    return {\n      opacity: 1,\n      x: 0,\n      y: 0,\n      transition: (_transition$enter = transition == null ? void 0 : transition.enter) != null ? _transition$enter : withDelay.enter(TransitionDefaults.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  },\n  exit: function exit(_ref3) {\n    var _transition$exit2;\n\n    var offsetY = _ref3.offsetY,\n        offsetX = _ref3.offsetX,\n        transition = _ref3.transition,\n        transitionEnd = _ref3.transitionEnd,\n        reverse = _ref3.reverse,\n        delay = _ref3.delay;\n    var offset = {\n      x: offsetX,\n      y: offsetY\n    };\n    return _extends({\n      opacity: 0,\n      transition: (_transition$exit2 = transition == null ? void 0 : transition.exit) != null ? _transition$exit2 : withDelay.exit(TransitionDefaults.exit, delay)\n    }, reverse ? _extends({}, offset, {\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    }) : {\n      transitionEnd: _extends({}, offset, transitionEnd == null ? void 0 : transitionEnd.exit)\n    });\n  }\n};\nexport var slideFadeConfig = {\n  initial: \"initial\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants\n};\nexport var SlideFade = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var unmountOnExit = props.unmountOnExit,\n      isOpen = props.in,\n      _props$reverse = props.reverse,\n      reverse = _props$reverse === void 0 ? true : _props$reverse,\n      className = props.className,\n      _props$offsetX = props.offsetX,\n      offsetX = _props$offsetX === void 0 ? 0 : _props$offsetX,\n      _props$offsetY = props.offsetY,\n      offsetY = _props$offsetY === void 0 ? 8 : _props$offsetY,\n      transition = props.transition,\n      transitionEnd = props.transitionEnd,\n      delay = props.delay,\n      rest = _objectWithoutPropertiesLoose(props, [\"unmountOnExit\", \"in\", \"reverse\", \"className\", \"offsetX\", \"offsetY\", \"transition\", \"transitionEnd\", \"delay\"]);\n\n  var show = unmountOnExit ? isOpen && unmountOnExit : true;\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  var custom = {\n    offsetX: offsetX,\n    offsetY: offsetY,\n    reverse: reverse,\n    transition: transition,\n    transitionEnd: transitionEnd,\n    delay: delay\n  };\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    custom: custom\n  }, show && /*#__PURE__*/React.createElement(motion.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-offset-slide\", className),\n    custom: custom\n  }, slideFadeConfig, {\n    animate: animate\n  }, rest)));\n});\n\nif (__DEV__) {\n  SlideFade.displayName = \"SlideFade\";\n}","map":{"version":3,"mappings":"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","names":["cx","__DEV__","AnimatePresence","motion","React","TransitionDefaults","withDelay","variants","initial","offsetX","offsetY","transition","transitionEnd","delay","opacity","x","y","exit","enter","reverse","offset","slideFadeConfig","animate","SlideFade","forwardRef","props","ref","unmountOnExit","isOpen","in","className","rest","show","custom","div","displayName"],"sources":["../../src/slide-fade.tsx"],"sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  TransitionDefaults,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\ninterface SlideFadeOptions {\n  /**\n   * The offset on the horizontal or `x` axis\n   * @default 0\n   */\n  offsetX?: string | number\n  /**\n   * The offset on the vertical or `y` axis\n   * @default 8\n   */\n  offsetY?: string | number\n  /**\n   * If `true`, the element will be transitioned back to the offset when it leaves.\n   * Otherwise, it'll only fade out\n   * @default true\n   */\n  reverse?: boolean\n}\n\nconst variants: Variants<SlideFadeOptions> = {\n  initial: ({ offsetX, offsetY, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    x: offsetX,\n    y: offsetY,\n    transition:\n      transition?.exit ?? withDelay.exit(TransitionDefaults.exit, delay),\n    transitionEnd: transitionEnd?.exit,\n  }),\n  enter: ({ transition, transitionEnd, delay }) => ({\n    opacity: 1,\n    x: 0,\n    y: 0,\n    transition:\n      transition?.enter ?? withDelay.enter(TransitionDefaults.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n  exit: ({ offsetY, offsetX, transition, transitionEnd, reverse, delay }) => {\n    const offset = { x: offsetX, y: offsetY }\n    return {\n      opacity: 0,\n      transition:\n        transition?.exit ?? withDelay.exit(TransitionDefaults.exit, delay),\n      ...(reverse\n        ? { ...offset, transitionEnd: transitionEnd?.exit }\n        : { transitionEnd: { ...offset, ...transitionEnd?.exit } }),\n    }\n  },\n}\n\nexport const slideFadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"initial\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport interface SlideFadeProps\n  extends SlideFadeOptions,\n    WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nexport const SlideFade = React.forwardRef<HTMLDivElement, SlideFadeProps>(\n  (props, ref) => {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      className,\n      offsetX = 0,\n      offsetY = 8,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = {\n      offsetX,\n      offsetY,\n      reverse,\n      transition,\n      transitionEnd,\n      delay,\n    }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-offset-slide\", className)}\n            custom={custom}\n            {...slideFadeConfig}\n            animate={animate}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  SlideFade.displayName = \"SlideFade\"\n}\n"]},"metadata":{},"sourceType":"module"}