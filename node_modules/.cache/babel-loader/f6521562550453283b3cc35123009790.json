{"ast":null,"code":"import _toConsumableArray from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { mergeRefs } from \"@chakra-ui/react-utils\";\nimport { createPopper } from \"@popperjs/core\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport * as customModifiers from \"./modifiers\";\nimport { cssVars, getEventListenerOptions } from \"./utils\";\nexport function usePopper(props) {\n  var _instance$current2, _instance$current3;\n\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      _props$enabled = _props.enabled,\n      enabled = _props$enabled === void 0 ? true : _props$enabled,\n      _props$modifiers = _props.modifiers,\n      modifiers = _props$modifiers === void 0 ? [] : _props$modifiers,\n      _props$placement = _props.placement,\n      placementProp = _props$placement === void 0 ? \"bottom\" : _props$placement,\n      _props$strategy = _props.strategy,\n      strategy = _props$strategy === void 0 ? \"absolute\" : _props$strategy,\n      _props$arrowPadding = _props.arrowPadding,\n      arrowPadding = _props$arrowPadding === void 0 ? 8 : _props$arrowPadding,\n      _props$eventListeners = _props.eventListeners,\n      eventListeners = _props$eventListeners === void 0 ? true : _props$eventListeners,\n      offset = _props.offset,\n      _props$gutter = _props.gutter,\n      gutter = _props$gutter === void 0 ? 8 : _props$gutter,\n      _props$flip = _props.flip,\n      flip = _props$flip === void 0 ? true : _props$flip,\n      _props$boundary = _props.boundary,\n      boundary = _props$boundary === void 0 ? \"clippingParents\" : _props$boundary,\n      _props$preventOverflo = _props.preventOverflow,\n      preventOverflow = _props$preventOverflo === void 0 ? true : _props$preventOverflo,\n      matchWidth = _props.matchWidth;\n  var reference = useRef(null);\n  var popper = useRef(null);\n  var instance = useRef(null);\n  var cleanup = useRef(function () {});\n  var setupPopper = useCallback(function () {\n    if (!enabled || !reference.current || !popper.current) return; // If popper instance exists, destroy it so we can create a new one\n\n    cleanup.current == null ? void 0 : cleanup.current();\n    instance.current = createPopper(reference.current, popper.current, {\n      placement: placementProp,\n      modifiers: [customModifiers.innerArrow, customModifiers.positionArrow, customModifiers.transformOrigin, _extends({}, customModifiers.matchWidth, {\n        enabled: !!matchWidth\n      }), _extends({\n        name: \"eventListeners\"\n      }, getEventListenerOptions(eventListeners)), {\n        name: \"arrow\",\n        options: {\n          padding: arrowPadding\n        }\n      }, {\n        name: \"offset\",\n        options: {\n          offset: offset != null ? offset : [0, gutter]\n        }\n      }, {\n        name: \"flip\",\n        enabled: !!flip,\n        options: {\n          padding: 8\n        }\n      }, {\n        name: \"preventOverflow\",\n        enabled: !!preventOverflow,\n        options: {\n          boundary: boundary\n        }\n      }].concat(_toConsumableArray(modifiers)),\n      strategy: strategy\n    }); // force update one-time to fix any positioning issues\n\n    instance.current.forceUpdate();\n    cleanup.current = instance.current.destroy;\n  }, [enabled, placementProp, modifiers, matchWidth, eventListeners, arrowPadding, offset, gutter, flip, preventOverflow, boundary, strategy]);\n  useEffect(function () {\n    return function () {\n      /**\n       * Fast refresh might call this function and tear down the popper\n       * even if the reference still exists. This checks against that\n       */\n      if (!reference.current && !popper.current) {\n        var _instance$current;\n\n        (_instance$current = instance.current) == null ? void 0 : _instance$current.destroy();\n        instance.current = null;\n      }\n    };\n  }, []);\n  var referenceRef = useCallback(function (node) {\n    reference.current = node;\n    setupPopper();\n  }, [setupPopper]);\n  var getReferenceProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(referenceRef, ref)\n    });\n  }, [referenceRef]);\n  var popperRef = useCallback(function (node) {\n    popper.current = node;\n    setupPopper();\n  }, [setupPopper]);\n  var getPopperProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(popperRef, ref),\n      style: _extends({}, props.style, {\n        position: strategy,\n        minWidth: \"max-content\"\n      })\n    });\n  }, [strategy, popperRef]);\n  var getArrowProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    var rest = _objectWithoutPropertiesLoose(props, [\"size\", \"shadowColor\", \"bg\", \"style\"]);\n\n    return _extends({}, rest, {\n      ref: ref,\n      \"data-popper-arrow\": \"\",\n      style: getArrowStyle(props)\n    });\n  }, []);\n  var getArrowInnerProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: ref,\n      \"data-popper-arrow-inner\": \"\"\n    });\n  }, []);\n  return {\n    update: (_instance$current2 = instance.current) == null ? void 0 : _instance$current2.update,\n    forceUpdate: (_instance$current3 = instance.current) == null ? void 0 : _instance$current3.forceUpdate,\n    transformOrigin: cssVars.transformOrigin.varRef,\n    referenceRef: referenceRef,\n    popperRef: popperRef,\n    getPopperProps: getPopperProps,\n    getArrowProps: getArrowProps,\n    getArrowInnerProps: getArrowInnerProps,\n    getReferenceProps: getReferenceProps\n  };\n}\n\nfunction getArrowStyle(props) {\n  var size = props.size,\n      shadowColor = props.shadowColor,\n      bg = props.bg,\n      style = props.style;\n\n  var computedStyle = _extends({}, style, {\n    position: \"absolute\"\n  });\n\n  if (size) {\n    computedStyle[\"--popper-arrow-size\"] = size;\n  }\n\n  if (shadowColor) {\n    computedStyle[\"--popper-arrow-shadow-color\"] = shadowColor;\n  }\n\n  if (bg) {\n    computedStyle[\"--popper-arrow-bg\"] = bg;\n  }\n\n  return computedStyle;\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAAwC,wBAAxC;AACA,SACEC,YADF,QAMO,gBANP;AAOA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,MAAjC,QAA+C,OAA/C;AACA,OAAO,KAAKC,eAAZ,MAAiC,aAAjC;AACA,SAASC,OAAT,EAAkBC,uBAAlB,QAAiD,SAAjD;AAyFA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA+C;EAAA;;EAAA,IAA5BA,KAA4B;IAA5BA,KAA4B,GAAJ,EAAxBA;EAA4B;;EACpD,aAaIA,KAbJ;EAAA,4BACEC,OADF;EAAA,IACEA,OADF,+BACY,IADZ;EAAA,8BAEEC,SAFF;EAAA,IAEEA,SAFF,iCAEc,EAFd;EAAA,8BAGEC,SAHF;EAAA,IAGaC,aAHb,iCAG6B,QAH7B;EAAA,6BAIEC,QAJF;EAAA,IAIEA,QAJF,gCAIa,UAJb;EAAA,iCAKEC,YALF;EAAA,IAKEA,YALF,oCAKiB,CALjB;EAAA,mCAMEC,cANF;EAAA,IAMEA,cANF,sCAMmB,IANnB;EAAA,IAOEC,MAPF,UAOEA,MAPF;EAAA,2BAQEC,MARF;EAAA,IAQEA,MARF,8BAQW,CARX;EAAA,yBASEC,IATF;EAAA,IASEA,IATF,4BASS,IATT;EAAA,6BAUEC,QAVF;EAAA,IAUEA,QAVF,gCAUa,iBAVb;EAAA,mCAWEC,eAXF;EAAA,IAWEA,eAXF,sCAWoB,IAXpB;EAAA,IAYEC,UAZF,UAYEA,UAZF;EAeA,IAAMC,SAAS,GAAGnB,MAAM,CAAkC,IAAlC,CAAxB;EACA,IAAMoB,MAAM,GAAGpB,MAAM,CAAqB,IAArB,CAArB;EACA,IAAMqB,QAAQ,GAAGrB,MAAM,CAAkB,IAAlB,CAAvB;EAEA,IAAMsB,OAAO,GAAGtB,MAAM,CAAC,YAAM,CAAP,EAAtB;EAEA,IAAMuB,WAAW,GAAGzB,WAAW,CAAC,YAAM;IACpC,IAAI,CAACQ,OAAD,IAAY,CAACa,SAAS,CAACK,OAAvB,IAAkC,CAACJ,MAAM,CAACI,OAA9C,EAAuD,OADnB,CAGpC;;IACAF,OAAO,CAACE,OAARF,2BAAO,CAACE,OAARF;IAEAD,QAAQ,CAACG,OAATH,GAAmBxB,YAAY,CAACsB,SAAS,CAACK,OAAX,EAAoBJ,MAAM,CAACI,OAA3B,EAAoC;MACjEhB,SAAS,EAAEC,aADsD;MAEjEF,SAAS,GACPN,eAAe,CAACwB,UADT,EAEPxB,eAAe,CAACyB,aAFT,EAGPzB,eAAe,CAAC0B,eAHT,EAAEC,aAIJ3B,eAAe,CAACiB,UAJZ;QAIwBZ,OAAO,EAAE,CAAC,CAACY;MAJnC,EAAF,EAAEU;QAMPC,IAAI,EAAE;MANC,GAOJ1B,uBAAuB,CAACS,cAAD,CAPnB,CAAF,EASP;QACEiB,IAAI,EAAE,OADR;QAEEC,OAAO,EAAE;UAAEC,OAAO,EAAEpB;QAAX;MAFX,CATO,EAaP;QACEkB,IAAI,EAAE,QADR;QAEEC,OAAO,EAAE;UACPjB,MAAM,EAAEA,MAAF,QAAEA,YAAU,CAAC,CAAD,EAAIC,MAAJ;QADX;MAFX,CAbO,EAmBP;QACEe,IAAI,EAAE,MADR;QAEEvB,OAAO,EAAE,CAAC,CAACS,IAFb;QAGEe,OAAO,EAAE;UAAEC,OAAO,EAAE;QAAX;MAHX,CAnBO,EAwBP;QACEF,IAAI,EAAE,iBADR;QAEEvB,OAAO,EAAE,CAAC,CAACW,eAFb;QAGEa,OAAO,EAAE;UAAEd;QAAF;MAHX,CAxBO,4BA8BJT,SA9BI,EAFwD;MAkCjEG;IAlCiE,CAApC,CAA/BW,CANoC,CA2CpC;;IACAA,QAAQ,CAACG,OAATH,CAAiBW,WAAjBX;IAEAC,OAAO,CAACE,OAARF,GAAkBD,QAAQ,CAACG,OAATH,CAAiBY,OAAnCX;EA9C6B,GA+C5B,CACDhB,OADC,EAEDG,aAFC,EAGDF,SAHC,EAIDW,UAJC,EAKDN,cALC,EAMDD,YANC,EAODE,MAPC,EAQDC,MARC,EASDC,IATC,EAUDE,eAVC,EAWDD,QAXC,EAYDN,QAZC,CA/C4B,CAA/B;EA8DAX,SAAS,CAAC,YAAM;IACd,OAAO,YAAM;MACX;AACN;AACA;AACA;MACM,IAAI,CAACoB,SAAS,CAACK,OAAX,IAAsB,CAACJ,MAAM,CAACI,OAAlC,EAA2C;QAAA;;QACzC,6BAAQ,CAACA,OAAT,uCAAkBS,OAAlB;QACAZ,QAAQ,CAACG,OAATH,GAAmB,IAAnBA;MACD;IARH;EADO,GAWN,EAXM,CAATtB;EAaA,IAAMmC,YAAY,GAAGpC,WAAW,CACOqC,cAArC,EAAwD;IACtDhB,SAAS,CAACK,OAAVL,GAAoBgB,IAApBhB;IACAI,WAAW;EAHiB,GAK9B,CAACA,WAAD,CAL8B,CAAhC;EAQA,IAAMa,iBAAiB,GAAGtC,WAAW,CACnC,UAACO,KAAD,EAAagC,GAAb;IAAA,IAAChC,KAAD;MAACA,KAAD,GAAS,EAARA;IAAD;;IAAA,IAAagC,GAAb;MAAaA,GAAb,GAAmB,IAANA;IAAb;;IAAA,oBACKhC,KADL;MAEEgC,GAAG,EAAEzC,SAAS,CAACsC,YAAD,EAAeG,GAAf;IAFhB;EADmC,GAKnC,CAACH,YAAD,CALmC,CAArC;EAQA,IAAMI,SAAS,GAAGxC,WAAW,CACHqC,cAAxB,EAA2C;IACzCf,MAAM,CAACI,OAAPJ,GAAiBe,IAAjBf;IACAG,WAAW;EAHc,GAK3B,CAACA,WAAD,CAL2B,CAA7B;EAQA,IAAMgB,cAAc,GAAGzC,WAAW,CAChC,UAACO,KAAD,EAAagC,GAAb;IAAA,IAAChC,KAAD;MAACA,KAAD,GAAS,EAARA;IAAD;;IAAA,IAAagC,GAAb;MAAaA,GAAb,GAAmB,IAANA;IAAb;;IAAA,oBACKhC,KADL;MAEEgC,GAAG,EAAEzC,SAAS,CAAC0C,SAAD,EAAYD,GAAZ,CAFhB;MAGEG,KAAK,eACAnC,KAAK,CAACmC,KADN;QAEHC,QAAQ,EAAE/B,QAFP;QAGHgC,QAAQ,EAAE;MAHP;IAHP;EADgC,GAUhC,CAAChC,QAAD,EAAW4B,SAAX,CAVgC,CAAlC;EAaA,IAAMK,aAAa,GAAG7C,WAAW,CAC/B,UAACO,KAAD,EAAagC,GAAb,EAA4B;IAAA,IAA3BhC,KAA2B;MAA3BA,KAA2B,GAAnB,EAARA;IAA2B;;IAAA,IAAfgC,GAAe;MAAfA,GAAe,GAAT,IAANA;IAAe;;IAC1B,IAAyCO,IAAzC,iCAAkDvC,KAAlD;;IACA,oBACKuC,IADL;MAEEP,GAFF,EAEEA,GAFF;MAGE,qBAAqB,EAHvB;MAIEG,KAAK,EAAEK,aAAa,CAACxC,KAAD;IAJtB;EAH6B,GAU/B,EAV+B,CAAjC;EAaA,IAAMyC,kBAAkB,GAAGhD,WAAW,CACpC,UAACO,KAAD,EAAagC,GAAb;IAAA,IAAChC,KAAD;MAACA,KAAD,GAAS,EAARA;IAAD;;IAAA,IAAagC,GAAb;MAAaA,GAAb,GAAmB,IAANA;IAAb;;IAAA,oBACKhC,KADL;MAEEgC,GAFF,EAEEA,GAFF;MAGE,2BAA2B;IAH7B;EADoC,GAMpC,EANoC,CAAtC;EASA,OAAO;IACLU,MAAM,wBAAE1B,QAAQ,CAACG,OAAX,qBAAEwB,mBAAkBD,MADrB;IAELf,WAAW,wBAAEX,QAAQ,CAACG,OAAX,qBAAEyB,mBAAkBjB,WAF1B;IAGLL,eAAe,EAAEzB,OAAO,CAACyB,eAARzB,CAAwBgD,MAHpC;IAILhB,YAJK,EAILA,YAJK;IAKLI,SALK,EAKLA,SALK;IAMLC,cANK,EAMLA,cANK;IAOLI,aAPK,EAOLA,aAPK;IAQLG,kBARK,EAQLA,kBARK;IASLV;EATK,CAAP;AAWD;;AAED,SAASS,aAAT,CAAuBxC,KAAvB,EAAmC;EACjC,IAAQ8C,IAAR,GAAyC9C,KAAzC,CAAQ8C,IAAR;EAAA,IAAcC,WAAd,GAAyC/C,KAAzC,CAAc+C,WAAd;EAAA,IAA2BC,EAA3B,GAAyChD,KAAzC,CAA2BgD,EAA3B;EAAA,IAA+Bb,KAA/B,GAAyCnC,KAAzC,CAA+BmC,KAA/B;;EACA,IAAMc,aAAa,gBAAQd,KAAR;IAAeC,QAAQ,EAAE;EAAzB,EAAnB;;EACA,IAAIU,IAAJ,EAAU;IACRG,aAAa,CAAC,qBAAD,CAAbA,GAAuCH,IAAvCG;EACD;;EACD,IAAIF,WAAJ,EAAiB;IACfE,aAAa,CAAC,6BAAD,CAAbA,GAA+CF,WAA/CE;EACD;;EACD,IAAID,EAAJ,EAAQ;IACNC,aAAa,CAAC,mBAAD,CAAbA,GAAqCD,EAArCC;EACD;;EACD,OAAOA,aAAP;AACD","names":["mergeRefs","createPopper","useCallback","useEffect","useRef","customModifiers","cssVars","getEventListenerOptions","usePopper","props","enabled","modifiers","placement","placementProp","strategy","arrowPadding","eventListeners","offset","gutter","flip","boundary","preventOverflow","matchWidth","reference","popper","instance","cleanup","setupPopper","current","innerArrow","positionArrow","transformOrigin","_extends","name","options","padding","forceUpdate","destroy","referenceRef","node","getReferenceProps","ref","popperRef","getPopperProps","style","position","minWidth","getArrowProps","rest","getArrowStyle","getArrowInnerProps","update","_instance$current2","_instance$current3","varRef","size","shadowColor","bg","computedStyle"],"sources":["../../src/use-popper.ts"],"sourcesContent":["import { mergeRefs, PropGetterV2 } from \"@chakra-ui/react-utils\"\nimport {\n  createPopper,\n  Instance,\n  Modifier,\n  Placement,\n  VirtualElement,\n} from \"@popperjs/core\"\nimport { useCallback, useEffect, useRef } from \"react\"\nimport * as customModifiers from \"./modifiers\"\nimport { cssVars, getEventListenerOptions } from \"./utils\"\n\nexport type { Placement }\n\nexport interface UsePopperProps {\n  enabled?: boolean\n  /**\n   * The main and cross-axis offset to displace popper element\n   * from its reference element.\n   */\n  offset?: [crossAxis: number, mainAxis: number]\n  /**\n   * The distance or margin between the reference and popper.\n   * It is used internally to create an `offset` modifier.\n   *\n   * NB: If you define `offset` prop, it'll override the gutter.\n   * @default 8\n   */\n  gutter?: number\n  /**\n   * If `true`, will prevent the popper from being cut off and ensure\n   * it's visible within the boundary area.\n   * @default true\n   */\n  preventOverflow?: boolean\n  /**\n   * If `true`, the popper will change its placement and flip when it's\n   * about to overflow its boundary area.\n   * @default true\n   */\n  flip?: boolean\n  /**\n   * If `true`, the popper will match the width of the reference at all times.\n   * It's useful for `autocomplete`, `date-picker` and `select` patterns.\n   */\n  matchWidth?: boolean\n  /**\n   * The boundary area for the popper. Used within the `preventOverflow` modifier\n   * @default \"clippingParents\"\n   */\n  boundary?: \"clippingParents\" | \"scrollParent\" | HTMLElement\n  /**\n   * If provided, determines whether the popper will reposition itself on `scroll`\n   * and `resize` of the window.\n   */\n  eventListeners?: boolean | { scroll?: boolean; resize?: boolean }\n  /**\n   * The padding required to prevent the arrow from\n   * reaching the very edge of the popper.\n   * @default 8\n   */\n  arrowPadding?: number\n  /**\n   * The CSS positioning strategy to use.\n   * @default \"absolute\"\n   */\n  strategy?: \"absolute\" | \"fixed\"\n  /**\n   * The placement of the popper relative to its reference.\n   * @default \"bottom\"\n   */\n  placement?: Placement\n  /**\n   * Array of popper.js modifiers. Check the docs to see\n   * the list of possible modifiers you can pass.\n   *\n   * @see Docs https://popper.js.org/docs/v2/modifiers/\n   */\n  modifiers?: Array<Partial<Modifier<string, any>>>\n}\n\nexport type ArrowCSSVarProps = {\n  /**\n   * The size of the popover arrow.\n   * This sets the `--popper-arrow-size` css property\n   */\n  size?: string | number\n  /**\n   * The box-shadow color of the popover arrow.\n   * This sets the `--popper-arrow-shadow-color` css property\n   */\n  shadowColor?: string\n  /**\n   * The background color of teh popper arrow.\n   * This sets the `--popper-arrow-bg` css property.\n   */\n  bg?: string\n}\n\nexport function usePopper(props: UsePopperProps = {}) {\n  const {\n    enabled = true,\n    modifiers = [],\n    placement: placementProp = \"bottom\",\n    strategy = \"absolute\",\n    arrowPadding = 8,\n    eventListeners = true,\n    offset,\n    gutter = 8,\n    flip = true,\n    boundary = \"clippingParents\",\n    preventOverflow = true,\n    matchWidth,\n  } = props\n\n  const reference = useRef<Element | VirtualElement | null>(null)\n  const popper = useRef<HTMLElement | null>(null)\n  const instance = useRef<Instance | null>(null)\n\n  const cleanup = useRef(() => {})\n\n  const setupPopper = useCallback(() => {\n    if (!enabled || !reference.current || !popper.current) return\n\n    // If popper instance exists, destroy it so we can create a new one\n    cleanup.current?.()\n\n    instance.current = createPopper(reference.current, popper.current, {\n      placement: placementProp,\n      modifiers: [\n        customModifiers.innerArrow,\n        customModifiers.positionArrow,\n        customModifiers.transformOrigin,\n        { ...customModifiers.matchWidth, enabled: !!matchWidth },\n        {\n          name: \"eventListeners\",\n          ...getEventListenerOptions(eventListeners),\n        },\n        {\n          name: \"arrow\",\n          options: { padding: arrowPadding },\n        },\n        {\n          name: \"offset\",\n          options: {\n            offset: offset ?? [0, gutter],\n          },\n        },\n        {\n          name: \"flip\",\n          enabled: !!flip,\n          options: { padding: 8 },\n        },\n        {\n          name: \"preventOverflow\",\n          enabled: !!preventOverflow,\n          options: { boundary },\n        },\n        // allow users override internal modifiers\n        ...modifiers,\n      ],\n      strategy,\n    })\n\n    // force update one-time to fix any positioning issues\n    instance.current.forceUpdate()\n\n    cleanup.current = instance.current.destroy\n  }, [\n    enabled,\n    placementProp,\n    modifiers,\n    matchWidth,\n    eventListeners,\n    arrowPadding,\n    offset,\n    gutter,\n    flip,\n    preventOverflow,\n    boundary,\n    strategy,\n  ])\n\n  useEffect(() => {\n    return () => {\n      /**\n       * Fast refresh might call this function and tear down the popper\n       * even if the reference still exists. This checks against that\n       */\n      if (!reference.current && !popper.current) {\n        instance.current?.destroy()\n        instance.current = null\n      }\n    }\n  }, [])\n\n  const referenceRef = useCallback(\n    <T extends Element | VirtualElement>(node: T | null) => {\n      reference.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getReferenceProps = useCallback<PropGetterV2<\"button\">>(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(referenceRef, ref),\n    }),\n    [referenceRef],\n  )\n\n  const popperRef = useCallback(\n    <T extends HTMLElement>(node: T | null) => {\n      popper.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getPopperProps = useCallback<PropGetterV2<\"div\">>(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(popperRef, ref),\n      style: {\n        ...props.style,\n        position: strategy,\n        minWidth: \"max-content\",\n      },\n    }),\n    [strategy, popperRef],\n  )\n\n  const getArrowProps = useCallback<PropGetterV2<\"div\", ArrowCSSVarProps>>(\n    (props = {}, ref = null) => {\n      const { size, shadowColor, bg, style, ...rest } = props\n      return {\n        ...rest,\n        ref,\n        \"data-popper-arrow\": \"\",\n        style: getArrowStyle(props),\n      }\n    },\n    [],\n  )\n\n  const getArrowInnerProps = useCallback<PropGetterV2<\"div\">>(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      \"data-popper-arrow-inner\": \"\",\n    }),\n    [],\n  )\n\n  return {\n    update: instance.current?.update,\n    forceUpdate: instance.current?.forceUpdate,\n    transformOrigin: cssVars.transformOrigin.varRef,\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getReferenceProps,\n  }\n}\n\nfunction getArrowStyle(props: any) {\n  const { size, shadowColor, bg, style } = props\n  const computedStyle = { ...style, position: \"absolute\" }\n  if (size) {\n    computedStyle[\"--popper-arrow-size\"] = size\n  }\n  if (shadowColor) {\n    computedStyle[\"--popper-arrow-shadow-color\"] = shadowColor\n  }\n  if (bg) {\n    computedStyle[\"--popper-arrow-bg\"] = bg\n  }\n  return computedStyle\n}\n\nexport type UsePopperReturn = ReturnType<typeof usePopper>\n"]},"metadata":{},"sourceType":"module"}