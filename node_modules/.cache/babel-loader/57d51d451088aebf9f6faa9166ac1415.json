{"ast":null,"code":"import _defineProperty from \"/home/ajay/Documents/foodieland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { useDisclosure, useEventListener, useId } from \"@chakra-ui/hooks\";\nimport { usePopper, popperCSSVars } from \"@chakra-ui/popper\";\nimport { callAllHandlers, px } from \"@chakra-ui/utils\";\nimport { mergeRefs } from \"@chakra-ui/react-utils\";\nimport * as React from \"react\";\nexport function useTooltip(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      _props$openDelay = _props.openDelay,\n      openDelay = _props$openDelay === void 0 ? 0 : _props$openDelay,\n      _props$closeDelay = _props.closeDelay,\n      closeDelay = _props$closeDelay === void 0 ? 0 : _props$closeDelay,\n      _props$closeOnClick = _props.closeOnClick,\n      closeOnClick = _props$closeOnClick === void 0 ? true : _props$closeOnClick,\n      closeOnMouseDown = _props.closeOnMouseDown,\n      onOpenProp = _props.onOpen,\n      onCloseProp = _props.onClose,\n      placement = _props.placement,\n      id = _props.id,\n      isOpenProp = _props.isOpen,\n      defaultIsOpen = _props.defaultIsOpen,\n      _props$arrowSize = _props.arrowSize,\n      arrowSize = _props$arrowSize === void 0 ? 10 : _props$arrowSize,\n      arrowShadowColor = _props.arrowShadowColor,\n      arrowPadding = _props.arrowPadding,\n      modifiers = _props.modifiers,\n      isDisabled = _props.isDisabled,\n      gutter = _props.gutter,\n      offset = _props.offset,\n      htmlProps = _objectWithoutPropertiesLoose(props, [\"openDelay\", \"closeDelay\", \"closeOnClick\", \"closeOnMouseDown\", \"onOpen\", \"onClose\", \"placement\", \"id\", \"isOpen\", \"defaultIsOpen\", \"arrowSize\", \"arrowShadowColor\", \"arrowPadding\", \"modifiers\", \"isDisabled\", \"gutter\", \"offset\"]);\n\n  var _useDisclosure = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen: defaultIsOpen,\n    onOpen: onOpenProp,\n    onClose: onCloseProp\n  }),\n      isOpen = _useDisclosure.isOpen,\n      onOpen = _useDisclosure.onOpen,\n      onClose = _useDisclosure.onClose;\n\n  var _usePopper = usePopper({\n    enabled: isOpen,\n    placement: placement,\n    arrowPadding: arrowPadding,\n    modifiers: modifiers,\n    gutter: gutter,\n    offset: offset\n  }),\n      referenceRef = _usePopper.referenceRef,\n      getPopperProps = _usePopper.getPopperProps,\n      getArrowInnerProps = _usePopper.getArrowInnerProps,\n      getArrowProps = _usePopper.getArrowProps;\n\n  var tooltipId = useId(id, \"tooltip\");\n  var ref = React.useRef(null);\n  var enterTimeout = React.useRef();\n  var exitTimeout = React.useRef();\n  var openWithDelay = React.useCallback(function () {\n    if (!isDisabled) {\n      enterTimeout.current = window.setTimeout(onOpen, openDelay);\n    }\n  }, [isDisabled, onOpen, openDelay]);\n  var closeWithDelay = React.useCallback(function () {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current);\n    }\n\n    exitTimeout.current = window.setTimeout(onClose, closeDelay);\n  }, [closeDelay, onClose]);\n  var onClick = React.useCallback(function () {\n    if (closeOnClick) {\n      closeWithDelay();\n    }\n  }, [closeOnClick, closeWithDelay]);\n  var onMouseDown = React.useCallback(function () {\n    if (closeOnMouseDown) {\n      closeWithDelay();\n    }\n  }, [closeOnMouseDown, closeWithDelay]);\n\n  var onKeyDown = function onKeyDown(event) {\n    if (isOpen && event.key === \"Escape\") {\n      closeWithDelay();\n    }\n  };\n\n  useEventListener(\"keydown\", onKeyDown);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(enterTimeout.current);\n      clearTimeout(exitTimeout.current);\n    };\n  }, []);\n  /**\n   * This allows for catching mouseleave events when the tooltip\n   * trigger is disabled. There's currently a known issue in\n   * React regarding the onMouseLeave polyfill.\n   * @see https://github.com/facebook/react/issues/11972\n   */\n\n  useEventListener(\"mouseleave\", closeWithDelay, ref.current);\n  var getTriggerProps = React.useCallback(function (props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    var triggerProps = _extends({}, props, {\n      ref: mergeRefs(ref, _ref, referenceRef),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, openWithDelay),\n      onClick: callAllHandlers(props.onClick, onClick),\n      onMouseDown: callAllHandlers(props.onMouseDown, onMouseDown),\n      onFocus: callAllHandlers(props.onFocus, openWithDelay),\n      onBlur: callAllHandlers(props.onBlur, closeWithDelay),\n      \"aria-describedby\": isOpen ? tooltipId : undefined\n    });\n\n    return triggerProps;\n  }, [openWithDelay, closeWithDelay, onMouseDown, isOpen, tooltipId, onClick, referenceRef]);\n  var getTooltipPositionerProps = React.useCallback(function (props, forwardedRef) {\n    var _extends2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return getPopperProps(_extends({}, props, {\n      style: _extends({}, props.style, (_extends2 = {}, _defineProperty(_extends2, popperCSSVars.arrowSize.var, arrowSize ? px(arrowSize) : undefined), _defineProperty(_extends2, popperCSSVars.arrowShadowColor.var, arrowShadowColor), _extends2))\n    }), forwardedRef);\n  }, [getPopperProps, arrowSize, arrowShadowColor]);\n  var getTooltipProps = React.useCallback(function (props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    var tooltipProps = _extends({\n      ref: _ref\n    }, htmlProps, props, {\n      id: tooltipId,\n      role: \"tooltip\",\n      style: _extends({}, props.style, {\n        position: \"relative\",\n        transformOrigin: popperCSSVars.transformOrigin.varRef\n      })\n    });\n\n    return tooltipProps;\n  }, [htmlProps, tooltipId]);\n  return {\n    isOpen: isOpen,\n    show: openWithDelay,\n    hide: closeWithDelay,\n    getTriggerProps: getTriggerProps,\n    getTooltipProps: getTooltipProps,\n    getTooltipPositionerProps: getTooltipPositionerProps,\n    getArrowProps: getArrowProps,\n    getArrowInnerProps: getArrowInnerProps\n  };\n}","map":{"version":3,"mappings":"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","names":["useDisclosure","useEventListener","useId","usePopper","popperCSSVars","callAllHandlers","px","mergeRefs","React","useTooltip","props","openDelay","closeDelay","closeOnClick","closeOnMouseDown","onOpenProp","onOpen","onCloseProp","onClose","placement","id","isOpenProp","isOpen","defaultIsOpen","arrowSize","arrowShadowColor","arrowPadding","modifiers","isDisabled","gutter","offset","htmlProps","enabled","referenceRef","getPopperProps","getArrowInnerProps","getArrowProps","tooltipId","ref","useRef","enterTimeout","exitTimeout","openWithDelay","useCallback","current","window","setTimeout","closeWithDelay","clearTimeout","onClick","onMouseDown","onKeyDown","event","key","useEffect","getTriggerProps","_ref","triggerProps","onMouseEnter","onFocus","onBlur","undefined","getTooltipPositionerProps","forwardedRef","style","var","getTooltipProps","tooltipProps","role","position","transformOrigin","varRef","show","hide"],"sources":["../../src/use-tooltip.ts"],"sourcesContent":["import { useDisclosure, useEventListener, useId } from \"@chakra-ui/hooks\"\nimport {\n  Placement,\n  usePopper,\n  UsePopperProps,\n  popperCSSVars,\n} from \"@chakra-ui/popper\"\nimport { callAllHandlers, px } from \"@chakra-ui/utils\"\nimport { mergeRefs, PropGetter } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\n\nexport interface UseTooltipProps\n  extends Pick<\n    UsePopperProps,\n    \"modifiers\" | \"gutter\" | \"offset\" | \"arrowPadding\"\n  > {\n  /**\n   * Delay (in ms) before showing the tooltip\n   * @default 0ms\n   */\n  openDelay?: number\n  /**\n   * Delay (in ms) before hiding the tooltip\n   * @default 0ms\n   */\n  closeDelay?: number\n  /**\n   * If `true`, the tooltip will hide on click\n   */\n  closeOnClick?: boolean\n  /**\n   * If `true`, the tooltip will hide while the mouse\n   * is down\n   */\n  closeOnMouseDown?: boolean\n  /**\n   * Callback to run when the tooltip shows\n   */\n  onOpen?(): void\n  /**\n   * Callback to run when the tooltip hides\n   */\n  onClose?(): void\n  /**\n   * The Popper.js placement of the tooltip\n   */\n  placement?: Placement\n  /**\n   * Custom `id` to use in place of `uuid`\n   */\n  id?: string\n  /**\n   * If `true`, the tooltip will be shown (in controlled mode)\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the tooltip will be initially shown\n   */\n  defaultIsOpen?: boolean\n  isDisabled?: boolean\n  arrowSize?: number\n  arrowShadowColor?: string\n}\n\nexport function useTooltip(props: UseTooltipProps = {}) {\n  const {\n    openDelay = 0,\n    closeDelay = 0,\n    closeOnClick = true,\n    closeOnMouseDown,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    placement,\n    id,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    arrowSize = 10,\n    arrowShadowColor,\n    arrowPadding,\n    modifiers,\n    isDisabled,\n    gutter,\n    offset,\n    ...htmlProps\n  } = props\n\n  const { isOpen, onOpen, onClose } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n  })\n\n  const {\n    referenceRef,\n    getPopperProps,\n    getArrowInnerProps,\n    getArrowProps,\n  } = usePopper({\n    enabled: isOpen,\n    placement,\n    arrowPadding,\n    modifiers,\n    gutter,\n    offset,\n  })\n\n  const tooltipId = useId(id, \"tooltip\")\n\n  const ref = React.useRef<any>(null)\n\n  const enterTimeout = React.useRef<number>()\n  const exitTimeout = React.useRef<number>()\n\n  const openWithDelay = React.useCallback(() => {\n    if (!isDisabled) {\n      enterTimeout.current = window.setTimeout(onOpen, openDelay)\n    }\n  }, [isDisabled, onOpen, openDelay])\n\n  const closeWithDelay = React.useCallback(() => {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current)\n    }\n    exitTimeout.current = window.setTimeout(onClose, closeDelay)\n  }, [closeDelay, onClose])\n\n  const onClick = React.useCallback(() => {\n    if (closeOnClick) {\n      closeWithDelay()\n    }\n  }, [closeOnClick, closeWithDelay])\n\n  const onMouseDown = React.useCallback(() => {\n    if (closeOnMouseDown) {\n      closeWithDelay()\n    }\n  }, [closeOnMouseDown, closeWithDelay])\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    if (isOpen && event.key === \"Escape\") {\n      closeWithDelay()\n    }\n  }\n\n  useEventListener(\"keydown\", onKeyDown)\n\n  React.useEffect(\n    () => () => {\n      clearTimeout(enterTimeout.current)\n      clearTimeout(exitTimeout.current)\n    },\n    [],\n  )\n\n  /**\n   * This allows for catching mouseleave events when the tooltip\n   * trigger is disabled. There's currently a known issue in\n   * React regarding the onMouseLeave polyfill.\n   * @see https://github.com/facebook/react/issues/11972\n   */\n  useEventListener(\"mouseleave\", closeWithDelay, ref.current)\n\n  const getTriggerProps: PropGetter = React.useCallback(\n    (props = {}, _ref = null) => {\n      const triggerProps = {\n        ...props,\n        ref: mergeRefs(ref, _ref, referenceRef),\n        onMouseEnter: callAllHandlers(props.onMouseEnter, openWithDelay),\n        onClick: callAllHandlers(props.onClick, onClick),\n        onMouseDown: callAllHandlers(props.onMouseDown, onMouseDown),\n        onFocus: callAllHandlers(props.onFocus, openWithDelay),\n        onBlur: callAllHandlers(props.onBlur, closeWithDelay),\n        \"aria-describedby\": isOpen ? tooltipId : undefined,\n      }\n\n      return triggerProps\n    },\n    [\n      openWithDelay,\n      closeWithDelay,\n      onMouseDown,\n      isOpen,\n      tooltipId,\n      onClick,\n      referenceRef,\n    ],\n  )\n\n  const getTooltipPositionerProps: PropGetter = React.useCallback(\n    (props = {}, forwardedRef = null) =>\n      getPopperProps(\n        {\n          ...props,\n          style: {\n            ...props.style,\n            [popperCSSVars.arrowSize.var]: arrowSize\n              ? px(arrowSize)\n              : undefined,\n            [popperCSSVars.arrowShadowColor.var]: arrowShadowColor,\n          },\n        },\n        forwardedRef,\n      ),\n    [getPopperProps, arrowSize, arrowShadowColor],\n  )\n\n  const getTooltipProps = React.useCallback(\n    (props = {}, _ref = null) => {\n      const tooltipProps = {\n        ref: _ref,\n        ...htmlProps,\n        ...props,\n        id: tooltipId,\n        role: \"tooltip\",\n        style: {\n          ...props.style,\n          position: \"relative\",\n          transformOrigin: popperCSSVars.transformOrigin.varRef,\n        },\n      }\n\n      return tooltipProps\n    },\n    [htmlProps, tooltipId],\n  )\n\n  return {\n    isOpen,\n    show: openWithDelay,\n    hide: closeWithDelay,\n    getTriggerProps,\n    getTooltipProps,\n    getTooltipPositionerProps,\n    getArrowProps,\n    getArrowInnerProps,\n  }\n}\n\nexport type UseTooltipReturn = ReturnType<typeof useTooltip>\n"]},"metadata":{},"sourceType":"module"}